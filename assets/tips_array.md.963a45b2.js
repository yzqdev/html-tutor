import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.97257f7d.js";const D=JSON.parse('{"title":"数组","description":"","frontmatter":{},"headers":[],"relativePath":"tips/array.md","filePath":"tips/array.md"}'),p={name:"tips/array.md"},o=l(`<h1 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h1><h2 id="删除一个" tabindex="-1">删除一个 <a class="header-anchor" href="#删除一个" aria-label="Permalink to &quot;删除一个&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">removeitem</span><span style="color:#657B83;">(arr, item) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">newstr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">replace</span><span style="color:#657B83;">(</span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">RegExp</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`g\`</span><span style="color:#657B83;">), </span><span style="color:#2AA198;">\`\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#268BD2;">newstr</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">removeitem</span><span style="color:#657B83;">([</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">], </span><span style="color:#D33682;">2</span><span style="color:#657B83;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeitem</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">, </span><span style="color:#E36209;">item</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> newstr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RegExp</span><span style="color:#24292E;">(item, </span><span style="color:#032F62;">\`g\`</span><span style="color:#24292E;">), </span><span style="color:#032F62;">\`\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(arr)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">newstr]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">removeitem</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 0.0.2/arrayUniqueFilter.js</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">11</span><span style="color:#657B83;">, </span><span style="color:#D33682;">22</span><span style="color:#657B83;">, </span><span style="color:#D33682;">11</span><span style="color:#657B83;">, </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">11</span><span style="color:#657B83;">, </span><span style="color:#D33682;">22</span><span style="color:#657B83;">, </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">unique</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (arr) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">    (element, index, self) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">// Self.indexOf(element) 每次都从数组第一个元素开始往下查</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">) </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">unique</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// [1, 2, 11, 22]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 上面可简写为</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">unique2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (arr) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">((element, index, self) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">) </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">unique2</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// [1, 2, 11, 22]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 元素非对象</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr3</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span></span>
<span class="line"><span style="color:#657B83;">  { id: </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, name: </span><span style="color:#2AA198;">\`张三\`</span><span style="color:#657B83;"> },</span></span>
<span class="line"><span style="color:#657B83;">  { id: </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, name: </span><span style="color:#2AA198;">\`李四\`</span><span style="color:#657B83;"> },</span></span>
<span class="line"><span style="color:#657B83;">  { id: </span><span style="color:#D33682;">11</span><span style="color:#657B83;">, name: </span><span style="color:#2AA198;">\`王五\`</span><span style="color:#657B83;"> },</span></span>
<span class="line"><span style="color:#657B83;">  { id: </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, name: </span><span style="color:#2AA198;">\`张三\`</span><span style="color:#657B83;"> },</span></span>
<span class="line"><span style="color:#657B83;">  { id: </span><span style="color:#D33682;">11</span><span style="color:#657B83;">, name: </span><span style="color:#2AA198;">\`王五\`</span><span style="color:#657B83;"> },</span></span>
<span class="line"><span style="color:#657B83;">  { id: </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, name: </span><span style="color:#2AA198;">\`李四\`</span><span style="color:#657B83;"> },</span></span>
<span class="line"><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">unique3</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (arr, id) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">of</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">find</span><span style="color:#657B83;">((v) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">v</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">id</span><span style="color:#657B83;">] </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">id</span><span style="color:#657B83;">])) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">continue</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">unique3</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr3</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`id\`</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// [{id: 1, name: &quot;张三&quot;}, {id: 2, name: &quot;李四&quot;}, {id: 11, name: &quot;王五&quot;}, {id: 3, name: &quot;李四&quot;}]</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 0.0.2/arrayUniqueFilter.js</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unique</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  arr.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#E36209;">self</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// Self.indexOf(element) 每次都从数组第一个元素开始往下查</span></span>
<span class="line"><span style="color:#24292E;">      self.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(element) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> index,</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">unique</span><span style="color:#24292E;">(arr)) </span><span style="color:#6A737D;">// [1, 2, 11, 22]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 上面可简写为</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unique2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  arr.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">element</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#E36209;">self</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> self.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(element) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> index)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">unique2</span><span style="color:#24292E;">(arr)) </span><span style="color:#6A737D;">// [1, 2, 11, 22]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 元素非对象</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { id: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">\`张三\`</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { id: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">\`李四\`</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { id: </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">\`王五\`</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { id: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">\`张三\`</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { id: </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">\`王五\`</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { id: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">\`李四\`</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unique3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">, </span><span style="color:#E36209;">id</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cache</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">item</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> arr) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cache.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">((</span><span style="color:#E36209;">v</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> v[id] </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> item[id])) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">continue</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    cache.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(item)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cache</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">unique3</span><span style="color:#24292E;">(arr3, </span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// [{id: 1, name: &quot;张三&quot;}, {id: 2, name: &quot;李四&quot;}, {id: 11, name: &quot;王五&quot;}, {id: 3, name: &quot;李四&quot;}]</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 0.0.2/array_algorithms.js</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr1</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">7</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">6</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">intersection</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (arr1, arr2) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">map</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Map</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// 键值对，键是 value，值是 value 出现次数, 出现次数累加</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr1</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr1</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">map</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">map</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">valueInMap</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// 键值对，中转 map 判断第二个数组的值是否存在，存在就留下来，然后 map 值次数减1</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr2</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr2</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">has</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">) </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">map</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">) </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">map</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">map</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">) </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">intersection</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr1</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">arr2</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// [ 2, 4, 3, 5, 5 ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 0.0.2/array_algorithms.js</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">intersection</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">map</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 键值对，键是 value，值是 value 出现次数, 出现次数累加</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr1.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr1[i]</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(map)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> valueInMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(valueInMap)</span></span>
<span class="line"><span style="color:#24292E;">    valueInMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (valueInMap </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> valueInMap </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(valueInMap)</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(value, valueInMap)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(map)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 键值对，中转 map 判断第二个数组的值是否存在，存在就留下来，然后 map 值次数减1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr2.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr2[i]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (map.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(value) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(value) </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      arr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">      map.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(value, map.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(value) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">intersection</span><span style="color:#24292E;">(arr1, arr2)) </span><span style="color:#6A737D;">// [ 2, 4, 3, 5, 5 ]</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;abcabcabcbbccccc&#39;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">char</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">&#39;a&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;a&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;b&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;b&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 使其按照一定的次序排列</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">compress</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (chars) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">re</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#DC322F;"> /(</span><span style="color:#CB4B16;">\\w</span><span style="color:#DC322F;">)</span><span style="color:#859900;">\\1+</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">replace</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">re</span><span style="color:#657B83;">, ($0, $1) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">$1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">$0</span><span style="color:#657B83;">.length))</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">temp</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">.length</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">compress</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;abcabcabcbbccccc&#39;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> char </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#6A737D;">// 使其按照一定的次序排列</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compress</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">chars</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  chars </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chars.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> re </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /(</span><span style="color:#005CC5;">\\w</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">\\1+</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#24292E;">  chars.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(re, (</span><span style="color:#E36209;">$0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    temp.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">($1)</span></span>
<span class="line"><span style="color:#24292E;">    temp.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">($0.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> temp</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(chars)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> chars.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">compress</span><span style="color:#24292E;">(arr))</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">f2c</span><span style="color:#657B83;">(x) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">convert</span><span style="color:#657B83;">(str, p1, offset, s) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> ((</span><span style="color:#268BD2;">p1</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">32</span><span style="color:#657B83;">) </span><span style="color:#859900;">*</span><span style="color:#657B83;"> </span><span style="color:#D33682;">5</span><span style="color:#657B83;">) </span><span style="color:#859900;">/</span><span style="color:#657B83;"> </span><span style="color:#D33682;">9</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;C&#39;</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">s</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">x</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">test</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#DC322F;">/(</span><span style="color:#CB4B16;">\\d</span><span style="color:#859900;">+</span><span style="color:#DC322F;">(?:</span><span style="color:#CB4B16;">\\.\\d</span><span style="color:#859900;">*</span><span style="color:#DC322F;">)</span><span style="color:#859900;">?</span><span style="color:#DC322F;">)F</span><span style="color:#859900;">\\b</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">s</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">replace</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">test</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">convert</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">f2c</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;232F&#39;</span><span style="color:#657B83;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f2c</span><span style="color:#24292E;">(</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">convert</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">offset</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ((p1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;C&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(x)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">(?:</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">*</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">)F</span><span style="color:#D73A49;">\\b</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(test, convert)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">f2c</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;232F&#39;</span><span style="color:#24292E;">))</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">123456654321</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ABababababab&#39;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handle</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (params) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str_1</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">params</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    .</span><span style="color:#268BD2;">replace</span><span style="color:#657B83;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">[</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">0-9A-Za-z]</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    .</span><span style="color:#268BD2;">toLowerCase</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str_2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str_1</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">split</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">reverse</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str_1</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str_2</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">handle</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#268BD2;">handle</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">str</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">num</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123456654321</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ABababababab&#39;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">params</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str_1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(params)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">[</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">0-9A-Za-z]</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">toLowerCase</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str_2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str_1.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> str_1 </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> str_2 </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(num) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(str) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 三种状态</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">PENDING</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;pending&quot;</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">RESOLVED</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;resolved&quot;</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">REJECTED</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;rejected&quot;</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// promise 接收一个函数参数，该函数会立即执行</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyPromise</span><span style="color:#657B83;">(fn) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">PENDING</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">undefined</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 用于保存 then 中的回调，只有当 promise</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 状态为 pending 时才会缓存，并且每个实例至多缓存一个</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolvedCallbacks</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [];</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">rejectedCallbacks</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (value) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">instanceof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">MyPromise</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#93A1A1;font-style:italic;">// 如果 value 是个 Mypromise，递归执行</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> { </span><span style="color:#93A1A1;font-style:italic;">// 异步执行，保证执行顺序</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">PENDING</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">RESOLVED</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolvedCallbacks</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">(cb </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cb</span><span style="color:#657B83;">());</span></span>
<span class="line"><span style="color:#657B83;">            }</span></span>
<span class="line"><span style="color:#657B83;">        })</span></span>
<span class="line"><span style="color:#657B83;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reject</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (reason) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> { </span><span style="color:#93A1A1;font-style:italic;">// 异步执行，保证执行顺序</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">PENDING</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">REJECTED</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">reason</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">rejectedCallbacks</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">(cb </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cb</span><span style="color:#657B83;">());</span></span>
<span class="line"><span style="color:#657B83;">            }</span></span>
<span class="line"><span style="color:#657B83;">        })</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 用于解决以下问题</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// new Mypromise(() =&gt; throw Error(&#39;error))</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">_this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">MyPromise</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">then</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (onResolved, onRejected) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">self</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.2.7，then 必须返回一个新的 promise</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.2.onResolved 和 onRejected 都为可选参数</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 如果类型不是函数需要忽略，同时也实现了透传</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// Mypromise.resolve(4).then().then((value) =&gt; console.log(value))</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">onResolved</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onResolved</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onResolved</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> v </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">v</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">onRejected</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onRejected</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onRejected</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> r </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">r</span><span style="color:#657B83;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">RESOLVED</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyPromise</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (resolve, reject) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.2.4，保证 onFulfilled，onRjected 异步执行</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#93A1A1;font-style:italic;">// 所以用了 setTimeout 包裹下</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onResolved</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                } </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">reason</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">reason</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                }</span></span>
<span class="line"><span style="color:#657B83;">            });</span></span>
<span class="line"><span style="color:#657B83;">        }));</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">REJECTED</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyPromise</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (resolve, reject) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 异步执行onRejected</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onRejected</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                } </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">reason</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">reason</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                }</span></span>
<span class="line"><span style="color:#657B83;">            });</span></span>
<span class="line"><span style="color:#657B83;">        }));</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">PENDING</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyPromise</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (resolve, reject) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolvedCallbacks</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 考虑到可能会有报错，所以使用 try/catch 包裹</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onResolved</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                } </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">r</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">r</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                }</span></span>
<span class="line"><span style="color:#657B83;">            });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">rejectedCallbacks</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">onRejected</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">self</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                } </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">r</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">r</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                }</span></span>
<span class="line"><span style="color:#657B83;">            });</span></span>
<span class="line"><span style="color:#657B83;">        }));</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">};</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 规范 2.3</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(promise2, x, resolve, reject) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.1，x 不能和 promise2 相同，避免循环引用</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">TypeError</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&quot;Error&quot;</span><span style="color:#657B83;">));</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.2</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 如果 x 为 Mypromise，状态为 pending 需要继续等待否则执行</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">instanceof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">MyPromise</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">x</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">currentState</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">PENDING</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (value) {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 再次调用该函数是为了确认 x resolve 的</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 参数是什么类型，如果是基本类型就再次 resolve</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 把值传给下个 then</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">            }, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">        } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3.3.3</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// reject 或者 resolve 其中一个执行过得话，忽略其他的</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">called</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3，判断 x 是否为对象或者函数</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> (</span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;object&quot;</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;function&quot;</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3.2，如果不能取出 then，就 reject</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3.1</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">then</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#93A1A1;font-style:italic;">// 如果 then 是函数，调用 x.then</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">then</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&quot;function&quot;</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3.3</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">then</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">                    </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">                    y </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">called</span><span style="color:#657B83;">) </span><span style="color:#859900;">return</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#268BD2;">called</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3.3.1</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#268BD2;">resolutionProcedure</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">promise2</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                    },</span></span>
<span class="line"><span style="color:#657B83;">                    e </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">called</span><span style="color:#657B83;">) </span><span style="color:#859900;">return</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#268BD2;">called</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">                        </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">                    }</span></span>
<span class="line"><span style="color:#657B83;">                );</span></span>
<span class="line"><span style="color:#657B83;">            } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.3.4</span></span>
<span class="line"><span style="color:#657B83;">                </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">x</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">            }</span></span>
<span class="line"><span style="color:#657B83;">        } </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">called</span><span style="color:#657B83;">) </span><span style="color:#859900;">return</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">called</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span><span style="color:#657B83;">;</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">// 规范 2.3.4，x 为基本类型</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">x</span><span style="color:#657B83;">);</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">p</span><span style="color:#859900;">=new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyPromise</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;thisis demo&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"><span style="color:#268BD2;">p</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;lllee&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 三种状态</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PENDING</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;pending&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RESOLVED</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;resolved&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">REJECTED</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rejected&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// promise 接收一个函数参数，该函数会立即执行</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">(</span><span style="color:#E36209;">fn</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> _this </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    _this.currentState </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PENDING</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    _this.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 用于保存 then 中的回调，只有当 promise</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 状态为 pending 时才会缓存，并且每个实例至多缓存一个</span></span>
<span class="line"><span style="color:#24292E;">    _this.resolvedCallbacks </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">    _this.rejectedCallbacks </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    _this.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (value </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 如果 value 是个 Mypromise，递归执行</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value.</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(_this.resolve, _this.reject)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 异步执行，保证执行顺序</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (_this.currentState </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PENDING</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                _this.currentState </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RESOLVED</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                _this.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">                _this.resolvedCallbacks.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">cb</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    _this.</span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">reason</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 异步执行，保证执行顺序</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (_this.currentState </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PENDING</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                _this.currentState </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">REJECTED</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                _this.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> reason;</span></span>
<span class="line"><span style="color:#24292E;">                _this.rejectedCallbacks.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">cb</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 用于解决以下问题</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// new Mypromise(() =&gt; throw Error(&#39;error))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">fn</span><span style="color:#24292E;">(_this.resolve, _this.reject);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">        _this.</span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">MyPromise</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">onResolved</span><span style="color:#24292E;">, </span><span style="color:#E36209;">onRejected</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> self </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 规范 2.2.7，then 必须返回一个新的 promise</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> promise2;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 规范 2.2.onResolved 和 onRejected 都为可选参数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 如果类型不是函数需要忽略，同时也实现了透传</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Mypromise.resolve(4).then().then((value) =&gt; console.log(value))</span></span>
<span class="line"><span style="color:#24292E;">    onResolved </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> onResolved </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> onResolved </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">v</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> v;</span></span>
<span class="line"><span style="color:#24292E;">    onRejected </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> onRejected </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> onRejected </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">r</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> r;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (self.currentState </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RESOLVED</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (promise2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 规范 2.2.4，保证 onFulfilled，onRjected 异步执行</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 所以用了 setTimeout 包裹下</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onResolved</span><span style="color:#24292E;">(self.value);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(promise2, x, resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (reason) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(reason);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        }));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (self.currentState </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">REJECTED</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (promise2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 异步执行onRejected</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onRejected</span><span style="color:#24292E;">(self.value);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(promise2, x, resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (reason) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(reason);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        }));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (self.currentState </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PENDING</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (promise2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            self.resolvedCallbacks.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 考虑到可能会有报错，所以使用 try/catch 包裹</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onResolved</span><span style="color:#24292E;">(self.value);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(promise2, x, resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (r) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(r);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            self.rejectedCallbacks.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onRejected</span><span style="color:#24292E;">(self.value);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(promise2, x, resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (r) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(r);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        }));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#6A737D;">// 规范 2.3</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(</span><span style="color:#E36209;">promise2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">x</span><span style="color:#24292E;">, </span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 规范 2.3.1，x 不能和 promise2 相同，避免循环引用</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (promise2 </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> x) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TypeError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Error&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 规范 2.3.2</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 如果 x 为 Mypromise，状态为 pending 需要继续等待否则执行</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x.currentState </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PENDING</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            x.</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 再次调用该函数是为了确认 x resolve 的</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 参数是什么类型，如果是基本类型就再次 resolve</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 把值传给下个 then</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(promise2, value, resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">            }, reject);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            x.</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 规范 2.3.3.3.3</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// reject 或者 resolve 其中一个执行过得话，忽略其他的</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> called </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 规范 2.3.3，判断 x 是否为对象或者函数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 规范 2.3.3.2，如果不能取出 then，就 reject</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 规范 2.3.3.1</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> then </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x.then;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 如果 then 是函数，调用 x.then</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> then </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;function&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 规范 2.3.3.3</span></span>
<span class="line"><span style="color:#24292E;">                then.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                    x,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">y</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (called) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        called </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6A737D;">// 规范 2.3.3.3.1</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">resolutionProcedure</span><span style="color:#24292E;">(promise2, y, resolve, reject);</span></span>
<span class="line"><span style="color:#24292E;">                    },</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">e</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (called) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        called </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                );</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 规范 2.3.3.4</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(x);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (called) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            called </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 规范 2.3.4，x 为基本类型</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(x);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> p</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyPromise</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;thisis demo&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">p.</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;lllee&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="map-padstart" tabindex="-1">map,padStart <a class="header-anchor" href="#map-padstart" aria-label="Permalink to &quot;map,padStart&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`list\`</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">padStart</span><span style="color:#657B83;">(</span><span style="color:#D33682;">8</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`=\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">m</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">6</span><span style="color:#657B83;">, </span><span style="color:#D33682;">7333</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">((x) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">padStart</span><span style="color:#657B83;">(</span><span style="color:#D33682;">10</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`*\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">m</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cars</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;🚙BMW&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">\`10\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;🚘Tesla&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">\`5\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;🚖Lamborghini&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">\`0\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">entries</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">cars</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">(([name, count]) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//padEnd appends &#39; -&#39; until the name becomes 20 characters</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//padStart prepends &#39;0&#39; until the count becomes 3 characters.</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`\${</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">padEnd</span><span style="color:#657B83;">(</span><span style="color:#D33682;">20</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\` -\`</span><span style="color:#657B83;">)</span><span style="color:#2AA198;">} Count: \${</span><span style="color:#268BD2;">count</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">padStart</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`0\`</span><span style="color:#657B83;">)</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`list\`</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`=\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7333</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> x.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`*\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(m)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cars</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;🚙BMW&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`10\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;🚘Tesla&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`5\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;🚖Lamborghini&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`0\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  Object.</span><span style="color:#6F42C1;">entries</span><span style="color:#24292E;">(cars).</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(([</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">count</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//padEnd appends &#39; -&#39; until the name becomes 20 characters</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//padStart prepends &#39;0&#39; until the count becomes 3 characters.</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">padEnd</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">20</span><span style="color:#032F62;">, </span><span style="color:#032F62;">\` -\`</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} Count: \${</span><span style="color:#24292E;">count</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">padStart</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">3</span><span style="color:#032F62;">, </span><span style="color:#032F62;">\`0\`</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="function" tabindex="-1">function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;function&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// console.log(...[1,2,3,]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">pushaay</span><span style="color:#657B83;">(array, items) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">items</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">array</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">pushaay</span><span style="color:#657B83;">([</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">], [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">]) </span><span style="color:#93A1A1;font-style:italic;">//[ 1, 2, 3, 4, 5 ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">f</span><span style="color:#657B83;">(x, y, z) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">args</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">f</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//不需要apply方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">max</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#657B83;">[</span><span style="color:#D33682;">23</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">12</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arrbefore</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arrtemp</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">arrbefore</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">arrtemp</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#2AA198;">\`hello\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">mapa</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Map</span><span style="color:#657B83;">([</span></span>
<span class="line"><span style="color:#657B83;">    [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`one\`</span><span style="color:#657B83;">],</span></span>
<span class="line"><span style="color:#657B83;">    [</span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`two\`</span><span style="color:#657B83;">],</span></span>
<span class="line"><span style="color:#657B83;">    [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`three\`</span><span style="color:#657B83;">],</span></span>
<span class="line"><span style="color:#657B83;">  ])</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#268BD2;">mapa</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">()] </span><span style="color:#93A1A1;font-style:italic;">//[1,2,3]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`hello</span><span style="color:#CB4B16;">\\n</span><span style="color:#2AA198;">\${</span><span style="color:#268BD2;">arr</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">go</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#859900;">*</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">yield</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">yield</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">yield</span><span style="color:#657B83;"> </span><span style="color:#D33682;">3</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">numbers</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#268BD2;">go</span><span style="color:#657B83;">()] </span><span style="color:#93A1A1;font-style:italic;">//[1,2,3]</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arraylik</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { </span><span style="color:#2AA198;">&#39;0&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">\`a\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">\`b\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">\`c\`</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arraylik</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`hello\`</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//等同于[...&#39;hello&#39;]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">nameset</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Set</span><span style="color:#657B83;">([</span><span style="color:#2AA198;">\`a\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`b\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`1\`</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">nameset</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">([</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">], (x) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">*</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">typefo</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">, (value) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//返回数据类型</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">nameset</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">of</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">6</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//[2,3,4,5,6]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">nameset</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">ii</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">copyWithin</span><span style="color:#657B83;">(</span><span style="color:#D33682;">0</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">ii</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fv</span><span style="color:#657B83;">(v) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">v</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">age</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">person</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { name: </span><span style="color:#2AA198;">\`json\`</span><span style="color:#657B83;">, age: </span><span style="color:#D33682;">20</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">resp</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">12</span><span style="color:#657B83;">, </span><span style="color:#D33682;">45</span><span style="color:#657B83;">, </span><span style="color:#D33682;">23</span><span style="color:#657B83;">, </span><span style="color:#D33682;">11</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">find</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">fv</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">person</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">resp</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">\`q\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`b\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`c\`</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">fill</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">fill</span><span style="color:#657B83;">({ name: </span><span style="color:#2AA198;">\`mike\`</span><span style="color:#657B83;"> })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`ben\`</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//赋值的是地址</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, [</span><span style="color:#D33682;">34</span><span style="color:#657B83;">, </span><span style="color:#D33682;">44</span><span style="color:#657B83;">]].</span><span style="color:#268BD2;">flat</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">m</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">flatMap</span><span style="color:#657B83;">((x) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> [</span><span style="color:#268BD2;">x</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">*</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">m</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">n</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">flatMap</span><span style="color:#657B83;">((x) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> [[</span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">*</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span><span style="color:#657B83;">]])</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">n</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//Array.from();</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">({ </span><span style="color:#2AA198;">&#39;0&#39;</span><span style="color:#657B83;">: </span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#657B83;">: </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, length: </span><span style="color:#D33682;">2</span><span style="color:#657B83;"> })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//[1,2]</span></span>
<span class="line"><span style="color:#657B83;">  ;[</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((prev, next, index, current) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//prev 如果reduce传入第二个参数，prev为第二个参数；否则prev为数组第一个元素  往后累加</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//next 如果reduce传入第二个参数，next为第数组第一个元素；否则next为数组第二个元素  依次累加</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//index 函数第几次执行1开始</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//current当前数组</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prev</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//reduce方法简单实现</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">myReduce</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (cb, pre) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prev</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">pre</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">pre</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">prev</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cb</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">prev</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">i</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prev</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (item) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">3</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//[4,5]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//filter简单实现</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">myFilter</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (cb) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">cb</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)) </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// console.log(...[1,2,3,]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pushaay</span><span style="color:#24292E;">(</span><span style="color:#E36209;">array</span><span style="color:#24292E;">, </span><span style="color:#E36209;">items</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  array.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">items)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(array)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">pushaay</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;">//[ 1, 2, 3, 4, 5 ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(</span><span style="color:#E36209;">x</span><span style="color:#24292E;">, </span><span style="color:#E36209;">y</span><span style="color:#24292E;">, </span><span style="color:#E36209;">z</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> args </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">args) </span><span style="color:#6A737D;">//不需要apply方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">23</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arrbefore </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arrtemp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">arrbefore.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">arrtemp)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#032F62;">\`hello\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mapa </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`one\`</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`two\`</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`three\`</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  ])</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">mapa.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">()] </span><span style="color:#6A737D;">//[1,2,3]</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`hello</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">\${</span><span style="color:#24292E;">arr</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function*</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> numbers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#6F42C1;">go</span><span style="color:#24292E;">()] </span><span style="color:#6A737D;">//[1,2,3]</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arraylik </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`a\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`b\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`c\`</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(arraylik))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`hello\`</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//等同于[...&#39;hello&#39;]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> nameset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">([</span><span style="color:#032F62;">\`a\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`b\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`1\`</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(nameset))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">], (</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> x))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">typefo</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> value) </span><span style="color:#6A737D;">//返回数据类型</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> nameset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//[2,3,4,5,6]</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(nameset)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ii </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">copyWithin</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(ii)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fv</span><span style="color:#24292E;">(</span><span style="color:#E36209;">v</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> v </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.age</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> person </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { name: </span><span style="color:#032F62;">\`json\`</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> resp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">45</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">23</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(fv, person)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(resp)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">\`q\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`b\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`c\`</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">({ name: </span><span style="color:#032F62;">\`mike\`</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`ben\`</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(arr) </span><span style="color:#6A737D;">//赋值的是地址</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, [</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">44</span><span style="color:#24292E;">]].</span><span style="color:#6F42C1;">flat</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">flatMap</span><span style="color:#24292E;">((</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [x, x </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(m)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">flatMap</span><span style="color:#24292E;">((</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [[x </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]])</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(n)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//Array.from();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">({ </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, length: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(arr) </span><span style="color:#6A737D;">//[1,2]</span></span>
<span class="line"><span style="color:#24292E;">  ;[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">prev</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#E36209;">current</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//prev 如果reduce传入第二个参数，prev为第二个参数；否则prev为数组第一个元素  往后累加</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//next 如果reduce传入第二个参数，next为第数组第一个元素；否则next为数组第二个元素  依次累加</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//index 函数第几次执行1开始</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//current当前数组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> prev </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> next</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//reduce方法简单实现</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">myReduce</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cb</span><span style="color:#24292E;">, </span><span style="color:#E36209;">pre</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> prev </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pre </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pre </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      prev </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">(prev, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">[i], i, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> prev</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result) </span><span style="color:#6A737D;">//[4,5]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//filter简单实现</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">myFilter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cb</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">[i]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">cb</span><span style="color:#24292E;">(item)) arr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(item)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="from-of" tabindex="-1">from,of <a class="header-anchor" href="#from-of" aria-label="Permalink to &quot;from,of&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a1</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">of</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">(</span><span style="color:#D33682;">6</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">fill</span><span style="color:#657B83;">(</span><span style="color:#D33682;">12</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a1</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">a2</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">m</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">    (accumulator, currentValue, currentIndex, array) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">accumulator</span><span style="color:#657B83;"> </span><span style="color:#859900;">*</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">m</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">it</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">Symbol</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">iterator</span><span style="color:#657B83;">]()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">it</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">done</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">it</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">it</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//2</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">it</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">findResult</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">includes</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">0</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">findResult</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">a</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`*\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">b</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">from</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">, (x) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">%</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">b</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">list</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">\`a\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`b\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`c\`</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">list</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((item, index) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//Value</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//Index</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//Index is optional</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">list</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">object</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    name: </span><span style="color:#2AA198;">\`xiaoming\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    age: </span><span style="color:#D33682;">34</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    sex: </span><span style="color:#2AA198;">\`man\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">property</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">object</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">property</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//Property name</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">object</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">property</span><span style="color:#657B83;">]) </span><span style="color:#93A1A1;font-style:italic;">//Property value</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">age</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">16</span><span style="color:#657B83;">, </span><span style="color:#D33682;">14</span><span style="color:#657B83;">, </span><span style="color:#D33682;">18</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">m</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">age</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">some</span><span style="color:#657B83;">((person) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">person</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">18</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">m</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a1, a2)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">m</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#E36209;">accumulator</span><span style="color:#24292E;">, </span><span style="color:#E36209;">currentValue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">currentIndex</span><span style="color:#24292E;">, </span><span style="color:#E36209;">array</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      accumulator </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> currentValue,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(m)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">it</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a[Symbol.iterator]()</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">().done)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">().value) </span><span style="color:#6A737D;">//1</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">().value) </span><span style="color:#6A737D;">//2</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">().value)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">findResult</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(findResult, a.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`*\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(a, (</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">\`a\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`b\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`c\`</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  list.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(item) </span><span style="color:#6A737D;">//Value</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(index) </span><span style="color:#6A737D;">//Index</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//Index is optional</span></span>
<span class="line"><span style="color:#24292E;">  list.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(item))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">object</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">\`xiaoming\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">34</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    sex: </span><span style="color:#032F62;">\`man\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">property</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> object) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(property) </span><span style="color:#6A737D;">//Property name</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(object[property]) </span><span style="color:#6A737D;">//Property value</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">age</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">m</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> age.</span><span style="color:#6F42C1;">some</span><span style="color:#24292E;">((</span><span style="color:#E36209;">person</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> person </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(m)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="getcount" tabindex="-1">getcount <a class="header-anchor" href="#getcount" aria-label="Permalink to &quot;getcount&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cars</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">&#39;BMW&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;Benz&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;Benz&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;Tesla&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;BMW&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;Toyota&#39;</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">time</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;测试开发&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">carsObj</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cars</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (obj, name) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#859900;">++</span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span></span>
<span class="line"><span style="color:#657B83;">}, {})</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">carsObj</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// =&gt; { BMW: 2, Benz: 2, Tesla: 1, Toyota: 1 }</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">timeEnd</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;测试开发&#39;</span><span style="color:#657B83;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cars </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;BMW&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Benz&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Benz&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Tesla&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;BMW&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Toyota&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;测试开发&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> carsObj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cars.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(obj)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(name)</span></span>
<span class="line"><span style="color:#24292E;">  obj[name] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj[name] </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">obj[name] </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj</span></span>
<span class="line"><span style="color:#24292E;">}, {})</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(carsObj) </span><span style="color:#6A737D;">// =&gt; { BMW: 2, Benz: 2, Tesla: 1, Toyota: 1 }</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;测试开发&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="compress" tabindex="-1">compress <a class="header-anchor" href="#compress" aria-label="Permalink to &quot;compress&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">compress</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (chars) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">char</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">numArr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">char</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">num</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">char</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">numArr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">split</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">numArr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((n) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">n</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        })</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">char</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">char</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">numArr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">split</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">numArr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((n) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">String</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">n</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">.length </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">chars</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">&#39;a&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;a&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;b&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;b&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">compress</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compress</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">chars</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> char </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chars[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> numArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  chars.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (item </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> char) {</span></span>
<span class="line"><span style="color:#24292E;">      num</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      chars[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> char</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">        chars[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(num)</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (num </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        numArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(num).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        numArr.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">n</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">          chars[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(n)</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">      char </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> item</span></span>
<span class="line"><span style="color:#24292E;">      num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  chars[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> char</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">    chars[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(num)</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (num </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    numArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(num).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    numArr.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">n</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">      chars[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(n)</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">  chars.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> index</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(chars)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> index</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">compress</span><span style="color:#24292E;">(arr))</span></span></code></pre></div><h2 id="reduce" tabindex="-1">reduce <a class="header-anchor" href="#reduce" aria-label="Permalink to &quot;reduce&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">data</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  rows: [</span></span>
<span class="line"><span style="color:#657B83;">    [</span><span style="color:#2AA198;">&#39;Lisa&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">16</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;Female&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;2000-12-01&#39;</span><span style="color:#657B83;">],</span></span>
<span class="line"><span style="color:#657B83;">    [</span><span style="color:#2AA198;">&#39;Bob&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">22</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;Male&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;1996-01-21&#39;</span><span style="color:#657B83;">],</span></span>
<span class="line"><span style="color:#657B83;">  ],</span></span>
<span class="line"><span style="color:#657B83;">  metaData: [</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      name: </span><span style="color:#2AA198;">&#39;name&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      note: </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      name: </span><span style="color:#2AA198;">&#39;age&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      note: </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      name: </span><span style="color:#2AA198;">&#39;gender&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      note: </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      name: </span><span style="color:#2AA198;">&#39;birthday&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      note: </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  ],</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">data</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">rows</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (prev1, cur1) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">prev1</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">data</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">metaData</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (prev, cur, index) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">prev</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cur1</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prev</span></span>
<span class="line"><span style="color:#657B83;">    }, {})</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prev1</span></span>
<span class="line"><span style="color:#657B83;">}, [])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#D33682;">1</span><span style="color:#657B83;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  rows: [</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&#39;Lisa&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Female&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2000-12-01&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&#39;Bob&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Male&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1996-01-21&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  metaData: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      note: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      note: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;gender&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      note: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;birthday&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      note: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.rows.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">prev1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cur1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  prev1.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    data.metaData.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">prev</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cur</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      prev[cur.name] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cur1[index]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> prev</span></span>
<span class="line"><span style="color:#24292E;">    }, {})</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> prev1</span></span>
<span class="line"><span style="color:#24292E;">}, [])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div>`,21),e=[o];function c(t,r,y,B,i,E){return n(),a("div",null,e)}const A=s(p,[["render",c]]);export{D as __pageData,A as default};
