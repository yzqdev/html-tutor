import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.97257f7d.js";const A=JSON.parse('{"title":"排序","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/order.md","filePath":"algorithm/order.md"}'),p={name:"algorithm/order.md"},o=l(`<h1 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">binarySearch</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (array, item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">low</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">high</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">.length </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">guess</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">low</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">high</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">mid</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">round</span><span style="color:#657B83;">((</span><span style="color:#268BD2;">low</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">high</span><span style="color:#657B83;">) </span><span style="color:#859900;">/</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">guess</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">mid</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">guess</span><span style="color:#657B83;"> </span><span style="color:#859900;">==</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">mid</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">guess</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">high</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">mid</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">low</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">mid</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">binarySearch</span><span style="color:#657B83;">([</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">6</span><span style="color:#657B83;">, </span><span style="color:#D33682;">7</span><span style="color:#657B83;">, </span><span style="color:#D33682;">8</span><span style="color:#657B83;">, </span><span style="color:#D33682;">9</span><span style="color:#657B83;">], </span><span style="color:#D33682;">9</span><span style="color:#657B83;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">binarySearch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">array</span><span style="color:#24292E;">, </span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> low </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> high </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> array.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> guess</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (low </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> high) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">((low </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> high) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    guess </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> array[mid]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (guess </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> item) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> mid</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (guess </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> item) {</span></span>
<span class="line"><span style="color:#24292E;">      high </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mid </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      low </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mid </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">binarySearch</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">))</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">swap</span><span style="color:#657B83;">(arr, indexA, indexB) {</span></span>
<span class="line"><span style="color:#657B83;">  ;[</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">indexA</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">indexB</span><span style="color:#657B83;">]] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">indexB</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">indexA</span><span style="color:#657B83;">]]</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">bubbleSort</span><span style="color:#657B83;">(arr) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.length</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//外层循环控制趟数</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">j</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//内层循环控制第i趟要比较的次数</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;">] </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">]) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//相邻元素两两对比</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">swap</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">j</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">bubbleSort</span><span style="color:#657B83;">([</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">44</span><span style="color:#657B83;">, </span><span style="color:#D33682;">38</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">47</span><span style="color:#657B83;">, </span><span style="color:#D33682;">15</span><span style="color:#657B83;">, </span><span style="color:#D33682;">36</span><span style="color:#657B83;">, </span><span style="color:#D33682;">26</span><span style="color:#657B83;">, </span><span style="color:#D33682;">27</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">46</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">19</span><span style="color:#657B83;">, </span><span style="color:#D33682;">50</span><span style="color:#657B83;">, </span><span style="color:#D33682;">48</span><span style="color:#657B83;">]),</span></span>
<span class="line"><span style="color:#657B83;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">swap</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">, </span><span style="color:#E36209;">indexA</span><span style="color:#24292E;">, </span><span style="color:#E36209;">indexB</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  ;[arr[indexA], arr[indexB]] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [arr[indexB], arr[indexA]]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bubbleSort</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> len; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//外层循环控制趟数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> i; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//内层循环控制第i趟要比较的次数</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (arr[j] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> arr[j </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//相邻元素两两对比</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swap</span><span style="color:#24292E;">(arr, j, j </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bubbleSort</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">44</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">38</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">47</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">46</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">19</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">48</span><span style="color:#24292E;">]),</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">//节点类</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(element) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">element</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//循环列表需要修改一下构造函数，和遍历时候的判断条件</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//构造函数如下；希望从后向前遍历，又不想要建立双向链表，就使用循环链表。</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Llist</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">head</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">head</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">remove</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">remove</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">insert</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">insert</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">find</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">find</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">display</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">display</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//..........</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">find</span><span style="color:#657B83;">(number) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">head</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">!=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">number</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">insert</span><span style="color:#657B83;">(element, newElement) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">preNode</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">find</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">newElement</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">preNode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">preNode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">remove</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">head</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;remove&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//跳过两个，杀死一个</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">!=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">!=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">temp</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">display</span><span style="color:#657B83;">(flag, current) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">crr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">head</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">flag</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">crr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">!=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;1&#39;</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">crr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">crr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">crr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//最后只剩两个直接输出</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Clist</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Llist</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//输入排序</span></span>
<span class="line"><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">41</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Clist</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">insert</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">(), (</span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//先输出所有</span></span>
<span class="line"><span style="color:#268BD2;">Clist</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">display</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#B58900;">null</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//通过remove返回最后杀死后的结果其中一个节点</span></span>
<span class="line"><span style="color:#268BD2;">Clist</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">display</span><span style="color:#657B83;">(</span><span style="color:#D33682;">0</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">Clist</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">remove</span><span style="color:#657B83;">()) </span><span style="color:#93A1A1;font-style:italic;">//16,31</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//节点类</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//循环列表需要修改一下构造函数，和遍历时候的判断条件</span></span>
<span class="line"><span style="color:#6A737D;">//构造函数如下；希望从后向前遍历，又不想要建立双向链表，就使用循环链表。</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Llist</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.head </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.head.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.head</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.remove </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> remove</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.insert </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> insert</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.find </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> find</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.display </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> display</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//..........</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#E36209;">number</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.head</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current.item </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> number) {</span></span>
<span class="line"><span style="color:#24292E;">    current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">, </span><span style="color:#E36209;">newElement</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> preNode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(element)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(newElement)</span></span>
<span class="line"><span style="color:#24292E;">  current.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> preNode.next</span></span>
<span class="line"><span style="color:#24292E;">  preNode.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.head</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;remove&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//跳过两个，杀死一个</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current.next.next </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> current.item </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> current.next.next.item) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next.next</span></span>
<span class="line"><span style="color:#24292E;">    current.next.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp.next</span></span>
<span class="line"><span style="color:#24292E;">    current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp.next</span></span>
<span class="line"><span style="color:#24292E;">    temp.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">display</span><span style="color:#24292E;">(</span><span style="color:#E36209;">flag</span><span style="color:#24292E;">, </span><span style="color:#E36209;">current</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> crr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.head</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (flag) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (crr.next.item </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(crr.item)</span></span>
<span class="line"><span style="color:#24292E;">      crr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> crr.next</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//最后只剩两个直接输出</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(current.item)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(current.next.item)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> Clist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Llist</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">//输入排序</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">41</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  Clist.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(i.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(), (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//先输出所有</span></span>
<span class="line"><span style="color:#24292E;">Clist.</span><span style="color:#6F42C1;">display</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//通过remove返回最后杀死后的结果其中一个节点</span></span>
<span class="line"><span style="color:#24292E;">Clist.</span><span style="color:#6F42C1;">display</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Clist.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">()) </span><span style="color:#6A737D;">//16,31</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">insertionSort</span><span style="color:#657B83;">(array) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">Object</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">array</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">(</span><span style="color:#D33682;">8</span><span style="color:#657B83;">, </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#657B83;">) </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;Array&#39;</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">time</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;插入排序耗时：&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">stand</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`key=\${</span><span style="color:#268BD2;">stand</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;">] </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">stand</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`\${</span><span style="color:#268BD2;">array</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">j</span><span style="color:#859900;">--</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">array</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">stand</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`第\${</span><span style="color:#268BD2;">i</span><span style="color:#2AA198;">}轮遍历,最总结过\${</span><span style="color:#268BD2;">array</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">timeEnd</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;插入排序耗时：&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">array</span></span>
<span class="line"><span style="color:#657B83;">  } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;array is not an Array!&#39;</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">insertionSort</span><span style="color:#657B83;">([</span><span style="color:#D33682;">45</span><span style="color:#657B83;">, </span><span style="color:#D33682;">23</span><span style="color:#657B83;">, </span><span style="color:#D33682;">56</span><span style="color:#657B83;">, </span><span style="color:#D33682;">778</span><span style="color:#657B83;">, </span><span style="color:#D33682;">32</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">77</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">24</span><span style="color:#657B83;">]))</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insertionSort</span><span style="color:#24292E;">(</span><span style="color:#E36209;">array</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Object</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.toString.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(array).</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Array&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;插入排序耗时：&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> array.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> stand </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> array[i]</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`key=\${</span><span style="color:#24292E;">stand</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (j </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> array[j] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> stand) {</span></span>
<span class="line"><span style="color:#24292E;">        array[j </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> array[j]</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">array</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        j</span><span style="color:#D73A49;">--</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      array[j </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> stand</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`第\${</span><span style="color:#24292E;">i</span><span style="color:#032F62;">}轮遍历,最总结过\${</span><span style="color:#24292E;">array</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;插入排序耗时：&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> array</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;array is not an Array!&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">insertionSort</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">45</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">23</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">56</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">778</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">77</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">LinkedList2</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">class</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Node</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">constructor</span><span style="color:#657B83;">(element) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">element</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//这里我们使用WeakMap对象来记录长度状态</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">WeakMap</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">WeakMap</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">class</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">LinkedList2</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">constructor</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#D33682;">0</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#B58900;">null</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">append</span><span style="color:#657B83;">(element) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">() </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">node</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">l</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">l</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">l</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">insert</span><span style="color:#657B83;">(position, element) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;">()) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">(),</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">node</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">node</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">          }</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">node</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">l</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">l</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">l</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">removeAt</span><span style="color:#657B83;">(position) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;">()) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">(),</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">          }</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">l</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">l</span><span style="color:#859900;">--</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">l</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">remove</span><span style="color:#657B83;">(element) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">removeAt</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(element) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">(),</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">element</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">isEmpty</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;">() </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">size</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;">(),</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">+=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;, &#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">string</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">print</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">LinkedList2</span></span>
<span class="line"><span style="color:#657B83;">})()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> LinkedList2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.element </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//这里我们使用WeakMap对象来记录长度状态</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WeakMap</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">head</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WeakMap</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LinkedList2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      length.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      head.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> node </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(element),</span></span>
<span class="line"><span style="color:#24292E;">        current</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        head.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, node)</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current.next) {</span></span>
<span class="line"><span style="color:#24292E;">          current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        current.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      l</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">      length.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, l)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#E36209;">position</span><span style="color:#24292E;">, </span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> position </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> node </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(element),</span></span>
<span class="line"><span style="color:#24292E;">          current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">          previous,</span></span>
<span class="line"><span style="color:#24292E;">          index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          node.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">          head.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, node)</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> position) {</span></span>
<span class="line"><span style="color:#24292E;">            previous </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">            current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          node.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">          previous.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        l</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">        length.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, l)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">removeAt</span><span style="color:#24292E;">(</span><span style="color:#E36209;">position</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> position </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">          previous,</span></span>
<span class="line"><span style="color:#24292E;">          index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          head.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, current.next)</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> position) {</span></span>
<span class="line"><span style="color:#24292E;">            previous </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">            current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          previous.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        l</span><span style="color:#D73A49;">--</span></span>
<span class="line"><span style="color:#24292E;">        length.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, l)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> current.element</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(element)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">removeAt</span><span style="color:#24292E;">(index)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (element </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> current.element) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> index</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">        current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> length.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> head.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current) {</span></span>
<span class="line"><span style="color:#24292E;">        string </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> current.element </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (current.next </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;, &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> string</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> LinkedList2</span></span>
<span class="line"><span style="color:#24292E;">})()</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">LinkedList</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//Node类声明</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (element) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">element</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//初始化链表长度</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">//初始化第一个元素</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">append</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (element) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//初始化添加的Node实例</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//第一个Node实例进入链表，之后在这个LinkedList实例中head就不再是null了</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//循环链表知道找到最后一项，循环结束current指向链表最后一项元素</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//找到最后一项元素后，将他的next属性指向新元素node,j建立链接</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//更新链表长度</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">length</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">insert</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (position, element) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//检查是否越界，超过链表长度或是小于0肯定不符合逻辑的</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Node</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//在第一个位置添加</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">node</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//循环链表，找到正确位置，循环完毕，previous，current分别是被添加元素的前一个和后一个元素</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">node</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">node</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//更新链表长度</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">length</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">removeAt</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (position) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//检查是否越界，超过链表长度或是小于0肯定不符合逻辑的</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//移除第一个元素</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">position</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//移除第一项，相当于head=null;</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">head</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//循环链表，找到正确位置，循环完毕，previous，current分别是被添加元素的前一个和后一个元素</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">position</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//链接previous和current的下一个元素，也就是把current移除了</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">previous</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">length</span><span style="color:#859900;">--</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (element) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//循环链表找到元素位置</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">element</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">remove</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (element) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//调用已经声明过的indexOf和removeAt方法</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">removeAt</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isEmpty</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">size</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">length</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getHead</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">head</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">+=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">element</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;, &#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">current</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">current</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">next</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">string</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">print</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//一个实例化后的链表，里面是添加的数个Node类的实例</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LinkedList</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//Node类声明</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.element </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> element</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//初始化链表长度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> length </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//初始化第一个元素</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> head </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//初始化添加的Node实例</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> node </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(element),</span></span>
<span class="line"><span style="color:#24292E;">      current</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (head </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//第一个Node实例进入链表，之后在这个LinkedList实例中head就不再是null了</span></span>
<span class="line"><span style="color:#24292E;">      head </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//循环链表知道找到最后一项，循环结束current指向链表最后一项元素</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current.next) {</span></span>
<span class="line"><span style="color:#24292E;">        current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//找到最后一项元素后，将他的next属性指向新元素node,j建立链接</span></span>
<span class="line"><span style="color:#24292E;">      current.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//更新链表长度</span></span>
<span class="line"><span style="color:#24292E;">    length</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">position</span><span style="color:#24292E;">, </span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//检查是否越界，超过链表长度或是小于0肯定不符合逻辑的</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> position </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> length) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> node </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(element),</span></span>
<span class="line"><span style="color:#24292E;">        current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head,</span></span>
<span class="line"><span style="color:#24292E;">        previous,</span></span>
<span class="line"><span style="color:#24292E;">        index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//在第一个位置添加</span></span>
<span class="line"><span style="color:#24292E;">        node.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">        head </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//循环链表，找到正确位置，循环完毕，previous，current分别是被添加元素的前一个和后一个元素</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> position) {</span></span>
<span class="line"><span style="color:#24292E;">          previous </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">          current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        node.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">        previous.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//更新链表长度</span></span>
<span class="line"><span style="color:#24292E;">      length</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">removeAt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">position</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//检查是否越界，超过链表长度或是小于0肯定不符合逻辑的</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> position </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> length) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head,</span></span>
<span class="line"><span style="color:#24292E;">        previous,</span></span>
<span class="line"><span style="color:#24292E;">        index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//移除第一个元素</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//移除第一项，相当于head=null;</span></span>
<span class="line"><span style="color:#24292E;">        head </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//循环链表，找到正确位置，循环完毕，previous，current分别是被添加元素的前一个和后一个元素</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> position) {</span></span>
<span class="line"><span style="color:#24292E;">          previous </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current</span></span>
<span class="line"><span style="color:#24292E;">          current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//链接previous和current的下一个元素，也就是把current移除了</span></span>
<span class="line"><span style="color:#24292E;">        previous.next </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      length</span><span style="color:#D73A49;">--</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> current.element</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head,</span></span>
<span class="line"><span style="color:#24292E;">      index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//循环链表找到元素位置</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (element </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> current.element) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> index</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      index</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">      current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//调用已经声明过的indexOf和removeAt方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(element)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">removeAt</span><span style="color:#24292E;">(index)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> length </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> length</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getHead</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> head</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head,</span></span>
<span class="line"><span style="color:#24292E;">      string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (current) {</span></span>
<span class="line"><span style="color:#24292E;">      string </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> current.element </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (current.next </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;, &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> current.next</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> string</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//一个实例化后的链表，里面是添加的数个Node类的实例</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">mergeSort</span><span style="color:#657B83;">(arr) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.length</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middle</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">floor</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">left</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">(</span><span style="color:#D33682;">0</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">middle</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">right</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">middle</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">merge</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">mergeSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">), </span><span style="color:#268BD2;">mergeSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">right</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">merge</span><span style="color:#657B83;">(left, right) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">.length </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">right</span><span style="color:#657B83;">.length) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">] </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">right</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">shift</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">right</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">shift</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">.length) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">shift</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">right</span><span style="color:#657B83;">.length) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">right</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">shift</span><span style="color:#657B83;">())</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">44</span><span style="color:#657B83;">, </span><span style="color:#D33682;">38</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">47</span><span style="color:#657B83;">, </span><span style="color:#D33682;">15</span><span style="color:#657B83;">, </span><span style="color:#D33682;">36</span><span style="color:#657B83;">, </span><span style="color:#D33682;">26</span><span style="color:#657B83;">, </span><span style="color:#D33682;">27</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">46</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">19</span><span style="color:#657B83;">, </span><span style="color:#D33682;">50</span><span style="color:#657B83;">, </span><span style="color:#D33682;">48</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">mergeSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> { </span><span style="color:#268BD2;">merge</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">mergeSort</span><span style="color:#657B83;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mergeSort</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (len </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> middle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(len </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> left </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, middle)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> right </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(middle)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">mergeSort</span><span style="color:#24292E;">(left), </span><span style="color:#6F42C1;">mergeSort</span><span style="color:#24292E;">(right))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">(</span><span style="color:#E36209;">left</span><span style="color:#24292E;">, </span><span style="color:#E36209;">right</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (left.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> right.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (left[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> right[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]) {</span></span>
<span class="line"><span style="color:#24292E;">      result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(left.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(right.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (left.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(left.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (right.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(right.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">44</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">38</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">47</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">46</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">19</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">48</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">mergeSort</span><span style="color:#24292E;">(arr))</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { merge, mergeSort }</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">qSort</span><span style="color:#657B83;">(arr) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.length </span><span style="color:#859900;">==</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">left</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">right</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">pivot</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">] </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">pivot</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">left</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">right</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">qSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">concat</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">pivot</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">qSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">right</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">44</span><span style="color:#657B83;">, </span><span style="color:#D33682;">38</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">47</span><span style="color:#657B83;">, </span><span style="color:#D33682;">15</span><span style="color:#657B83;">, </span><span style="color:#D33682;">36</span><span style="color:#657B83;">, </span><span style="color:#D33682;">26</span><span style="color:#657B83;">, </span><span style="color:#D33682;">27</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">46</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">19</span><span style="color:#657B83;">, </span><span style="color:#D33682;">50</span><span style="color:#657B83;">, </span><span style="color:#D33682;">48</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">qSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">qSort</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (arr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> left </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> right </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> pivot </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (arr[i] </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> pivot) {</span></span>
<span class="line"><span style="color:#24292E;">      left.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(arr[i])</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      right.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(arr[i])</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">qSort</span><span style="color:#24292E;">(left).</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(pivot, </span><span style="color:#6F42C1;">qSort</span><span style="color:#24292E;">(right))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">44</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">38</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">47</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">46</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">19</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">48</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">qSort</span><span style="color:#24292E;">(arr))</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">selectionSort</span><span style="color:#657B83;">(arr) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.length</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">minIndex</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">temp</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">time</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;选择排序耗时&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">minIndex</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">j</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">j</span><span style="color:#657B83;">] </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">minIndex</span><span style="color:#657B83;">]) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#93A1A1;font-style:italic;">//寻找最小的数</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">minIndex</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">j</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//将最小数的索引保存</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    ;[</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">minIndex</span><span style="color:#657B83;">]] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">minIndex</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">]]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">timeEnd</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;选择排序耗时&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">44</span><span style="color:#657B83;">, </span><span style="color:#D33682;">38</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">, </span><span style="color:#D33682;">47</span><span style="color:#657B83;">, </span><span style="color:#D33682;">15</span><span style="color:#657B83;">, </span><span style="color:#D33682;">36</span><span style="color:#657B83;">, </span><span style="color:#D33682;">26</span><span style="color:#657B83;">, </span><span style="color:#D33682;">27</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">46</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">, </span><span style="color:#D33682;">19</span><span style="color:#657B83;">, </span><span style="color:#D33682;">50</span><span style="color:#657B83;">, </span><span style="color:#D33682;">48</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">selectionSort</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">selectionSort</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> minIndex, temp</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;选择排序耗时&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    minIndex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> len; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (arr[j] </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr[minIndex]) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//寻找最小的数</span></span>
<span class="line"><span style="color:#24292E;">        minIndex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> j </span><span style="color:#6A737D;">//将最小数的索引保存</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    ;[arr[i], arr[minIndex]] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [arr[minIndex], arr[i]]</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(arr)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;选择排序耗时&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">44</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">38</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">47</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">46</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">19</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">48</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">selectionSort</span><span style="color:#24292E;">(arr)) </span><span style="color:#6A737D;">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span></code></pre></div>`,10),e=[o];function t(c,r,y,B,i,E){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{A as __pageData,C as default};
