import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.97257f7d.js";const A=JSON.parse('{"title":"proxy和reflect","description":"","frontmatter":{},"headers":[],"relativePath":"es6/proxy.md","filePath":"es6/proxy.md"}'),p={name:"es6/proxy.md"},o=l(`<h1 id="proxy和reflect" tabindex="-1">proxy和reflect <a class="header-anchor" href="#proxy和reflect" aria-label="Permalink to &quot;proxy和reflect&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(f, ms) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">f</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(target, thisArg, args) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">thisArg</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">args</span><span style="color:#657B83;">), </span><span style="color:#268BD2;">ms</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">sayHi</span><span style="color:#657B83;">(user) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`Hello, \${</span><span style="color:#268BD2;">user</span><span style="color:#2AA198;">}!\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">sayHi</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">sayHi</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3000</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">sayHi</span><span style="color:#657B83;">.length) </span><span style="color:#93A1A1;font-style:italic;">// 1 (*) proxy 转发“获取 length” 操作到目标对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">sayHi</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;John&#39;</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// Hello, John! （3秒后）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">delay</span><span style="color:#24292E;">(</span><span style="color:#E36209;">f</span><span style="color:#24292E;">, </span><span style="color:#E36209;">ms</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(f, {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">thisArg</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> target.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(thisArg, args), ms)</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sayHi</span><span style="color:#24292E;">(</span><span style="color:#E36209;">user</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Hello, \${</span><span style="color:#24292E;">user</span><span style="color:#032F62;">}!\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">sayHi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">delay</span><span style="color:#24292E;">(sayHi, </span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(sayHi.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 1 (*) proxy 转发“获取 length” 操作到目标对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">sayHi</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// Hello, John! （3秒后）</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">formatNumber</span><span style="color:#657B83;">(str) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">lastStr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">substring</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;.&#39;</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">formatStr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">substring</span><span style="color:#657B83;">(</span><span style="color:#D33682;">0</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;.&#39;</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// [&quot;0&quot;, &quot;9&quot;, &quot;8&quot;, &quot;7&quot;, &quot;6&quot;, &quot;5&quot;, &quot;4&quot;, &quot;3&quot;, &quot;2&quot;, &quot;1&quot;]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">lastStr</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">formatStr</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">re</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">formatStr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">split</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">reverse</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">re</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">re</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((acc, cur, index) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">%</span><span style="color:#657B83;"> </span><span style="color:#D33682;">3</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cur</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cur</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;,&#39;</span><span style="color:#657B83;">) </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">acc</span></span>
<span class="line"><span style="color:#657B83;">    }) </span><span style="color:#859900;">+</span><span style="color:#657B83;"> lastStr</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">formatNumber</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;1234569234280689.45&#39;</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">formatNumber</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> lastStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> formatStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, str.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// [&quot;0&quot;, &quot;9&quot;, &quot;8&quot;, &quot;7&quot;, &quot;6&quot;, &quot;5&quot;, &quot;4&quot;, &quot;3&quot;, &quot;2&quot;, &quot;1&quot;]</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(lastStr)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(formatStr)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> re </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> formatStr.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(re)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    re.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">acc</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cur</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> cur </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> cur </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> acc</span></span>
<span class="line"><span style="color:#24292E;">    }) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#E36209;">lastStr</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">formatNumber</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1234569234280689.45&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">dog</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  name: </span><span style="color:#2AA198;">\`小黄\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  friends: [</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      name: </span><span style="color:#2AA198;">\`小红\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  ],</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 1.首先new一个Proxy对象</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">proxy</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">dog</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// 2.参数一为需要代理的数据，参数二为上图可以代理的13种的配置对象</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, property) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 3.参数1为上面dog对象，参数2为dog的属性</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`get被监控到了\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">property</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, property, value, obj) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 4.参数1为上面dog对象，参数2为dog的属性，参数3为设置的新值</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 有点类似Object.defineProperty</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">property</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`set被监控到了\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">property</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 那么接下来我们设置一下这个属性</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Dog.name = &#39;小红&#39;  // set值时，发现不会打印 &#39;set被监控到了&#39;</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Dog.name // get值时，发现不会打印 &#39;get被监控到了&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 思考：为什么在set/get值的时候不会打印出来我们需要的东西呢？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 上面说得很明白了，proxy相当于是一个壳，代理我们需要监控的数据，也就是我们要通过proxy来访问内部数据才会被监控到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">proxy</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`小红\`</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// 打印输出 &#39;set被监控到了&#39;</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">proxy</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dog</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">\`小黄\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  friends: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">\`小红\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1.首先new一个Proxy对象</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> proxy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(dog, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 2.参数一为需要代理的数据，参数二为上图可以代理的13种的配置对象</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">property</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 3.参数1为上面dog对象，参数2为dog的属性</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`get被监控到了\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> target[property]</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">property</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, </span><span style="color:#E36209;">obj</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 4.参数1为上面dog对象，参数2为dog的属性，参数3为设置的新值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 有点类似Object.defineProperty</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(obj)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(target, property, value)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`set被监控到了\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    target[property] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 那么接下来我们设置一下这个属性</span></span>
<span class="line"><span style="color:#6A737D;">// Dog.name = &#39;小红&#39;  // set值时，发现不会打印 &#39;set被监控到了&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// Dog.name // get值时，发现不会打印 &#39;get被监控到了&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 思考：为什么在set/get值的时候不会打印出来我们需要的东西呢？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 上面说得很明白了，proxy相当于是一个壳，代理我们需要监控的数据，也就是我们要通过proxy来访问内部数据才会被监控到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">proxy.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`小红\`</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 打印输出 &#39;set被监控到了&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(proxy.name)</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">dictionary</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  Hello: </span><span style="color:#2AA198;">&#39;Hola&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  Bye: </span><span style="color:#2AA198;">&#39;Adiós&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">dictionary</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">dictionary</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, phrase) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 拦截读取属性操作</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">phrase</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//如果字典包含该短语</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">phrase</span><span style="color:#657B83;">] </span><span style="color:#93A1A1;font-style:italic;">// 返回译文</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">// 否则返回未翻译的短语</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">phrase</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">dictionary</span><span style="color:#657B83;">[</span><span style="color:#2AA198;">&#39;Hello&#39;</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">dictionary</span><span style="color:#657B83;">[</span><span style="color:#2AA198;">&#39;welcome to beijing&#39;</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> dictionary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  Hello: </span><span style="color:#032F62;">&#39;Hola&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  Bye: </span><span style="color:#032F62;">&#39;Adiós&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">dictionary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(dictionary, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">phrase</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 拦截读取属性操作</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (phrase </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> target) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//如果字典包含该短语</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> target[phrase] </span><span style="color:#6A737D;">// 返回译文</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 否则返回未翻译的短语</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> phrase</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(dictionary[</span><span style="color:#032F62;">&#39;Hello&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(dictionary[</span><span style="color:#032F62;">&#39;welcome to beijing&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">numbers</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">numbers</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">numbers</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// (*)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, prop, val) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 拦截写入操作</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">val</span><span style="color:#657B83;"> </span><span style="color:#859900;">==</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;number&#39;</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">val</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">numbers</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// 添加成功</span></span>
<span class="line"><span style="color:#268BD2;">numbers</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// 添加成功</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;Length is: &#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">numbers</span><span style="color:#657B83;">.length) </span><span style="color:#93A1A1;font-style:italic;">// 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">numbers</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;test&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">} </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">error</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;有错误&#39;</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">error</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">} </span><span style="color:#93A1A1;font-style:italic;">// TypeError （proxy 的 \`set\` 操作返回 false）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> numbers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">numbers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(numbers, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// (*)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">val</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 拦截写入操作</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> val </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      target[prop] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> val</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">numbers.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 添加成功</span></span>
<span class="line"><span style="color:#24292E;">numbers.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 添加成功</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Length is: &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> numbers.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  numbers.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (error) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;有错误&#39;</span><span style="color:#24292E;">, error)</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#6A737D;">// TypeError （proxy 的 \`set\` 操作返回 false）</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  name: </span><span style="color:#2AA198;">&#39;John&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  age: </span><span style="color:#D33682;">30</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  _password: </span><span style="color:#2AA198;">&#39;***&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">user</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">ownKeys</span><span style="color:#657B83;">(target) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">((key) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">!</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">startsWith</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;_&#39;</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// &quot;ownKeys&quot; 过滤掉 _password</span></span>
<span class="line"><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;">) </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// name，然后是 age</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 对这些方法同样有效：</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// name,age</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">values</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// John,30</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 我们使用 ownKeys 钩子拦截 for..in 对 user 的遍历，还使用 Object.keys 和 Object.values 来跳过以下划线 _ 开头的属性：</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  _password: </span><span style="color:#032F62;">&#39;***&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(user, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ownKeys</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(target).</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">key.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;ownKeys&quot; 过滤掉 _password</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> user) console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(key) </span><span style="color:#6A737D;">// name，然后是 age</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对这些方法同样有效：</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(user)) </span><span style="color:#6A737D;">// name,age</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Object.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">(user)) </span><span style="color:#6A737D;">// John,30</span></span>
<span class="line"><span style="color:#6A737D;">// 我们使用 ownKeys 钩子拦截 for..in 对 user 的遍历，还使用 Object.keys 和 Object.values 来跳过以下划线 _ 开头的属性：</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  name: </span><span style="color:#2AA198;">&#39;John&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  _password: </span><span style="color:#2AA198;">&#39;***&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">user</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, prop) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">startsWith</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;_&#39;</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Error</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;Access denied&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">bind</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">) </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// (*)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, prop, val) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 拦截写入操作</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">startsWith</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;_&#39;</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Error</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;Access denied&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">val</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">deleteProperty</span><span style="color:#657B83;">(target, prop) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 拦截属性删除</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">startsWith</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;_&#39;</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Error</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;Access denied&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">delete</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">ownKeys</span><span style="color:#657B83;">(target) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 拦截读取属性列表</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">((key) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">!</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">startsWith</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;_&#39;</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// “get” 不允许读取 _password</span></span>
<span class="line"><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">_password</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// Error: Access denied</span></span>
<span class="line"><span style="color:#657B83;">} </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">message</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//  “set” 不允许写入 _password</span></span>
<span class="line"><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">user</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">_password</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;test&#39;</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// Error: Access denied</span></span>
<span class="line"><span style="color:#657B83;">} </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">message</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// “deleteProperty” 不允许删除 _password 属性</span></span>
<span class="line"><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">delete</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">_password</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// Error: Access denied</span></span>
<span class="line"><span style="color:#657B83;">} </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">e</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">message</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// “ownKeys” 过滤排除 _password</span></span>
<span class="line"><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;">) </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  _password: </span><span style="color:#032F62;">&#39;***&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(user, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (prop.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Access denied&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> target[prop]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> value.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(target) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> value </span><span style="color:#6A737D;">// (*)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">val</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 拦截写入操作</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (prop.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Access denied&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      target[prop] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> val</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">deleteProperty</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 拦截属性删除</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (prop.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Access denied&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> target[prop]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ownKeys</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 拦截读取属性列表</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(target).</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">key.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// “get” 不允许读取 _password</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(user._password) </span><span style="color:#6A737D;">// Error: Access denied</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e.message)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//  “set” 不允许写入 _password</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  user._password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// Error: Access denied</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e.message)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// “deleteProperty” 不允许删除 _password 属性</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> user._password </span><span style="color:#6A737D;">// Error: Access denied</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e.message)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// “ownKeys” 过滤排除 _password</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> user) console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(key) </span><span style="color:#6A737D;">// name</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">range</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  start: </span><span style="color:#D33682;">1</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  end: </span><span style="color:#D33682;">10</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">range</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">range</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">has</span><span style="color:#657B83;">(target, prop) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prop</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">start</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prop</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">end</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">5</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">range</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">50</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">range</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> range </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  start: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  end: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">range </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(range, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> prop </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> target.start </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> prop </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> target.end</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> range) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> range) </span><span style="color:#6A737D;">// false</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">b</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { key: </span><span style="color:#2AA198;">&#39;b&#39;</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">c</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { key: </span><span style="color:#2AA198;">&#39;c&#39;</span><span style="color:#657B83;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">a</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">b</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">123</span></span>
<span class="line"><span style="color:#268BD2;">a</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">c</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">456</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">b</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 对象键自动转换为字符串;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { key: </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">c</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { key: </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">a[b] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;">a[c] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">456</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a[b])</span></span>
<span class="line"><span style="color:#6A737D;">// 对象键自动转换为字符串;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  name: </span><span style="color:#2AA198;">&#39;John&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">user</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, prop, receiver) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`GET \${</span><span style="color:#268BD2;">prop</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">receiver</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// (1)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, prop, val, receiver) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`SET \${</span><span style="color:#268BD2;">prop</span><span style="color:#2AA198;">}=\${</span><span style="color:#268BD2;">val</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">val</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">receiver</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// (2)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">user</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// console.log(Object.prototype.toString.call(user));</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">user</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// shows &quot;GET name&quot;</span></span>
<span class="line"><span style="color:#268BD2;">user</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;Pete&#39;</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// shows &quot;SET name=Pete&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(user, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">receiver</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`GET \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(target, prop, receiver) </span><span style="color:#6A737D;">// (1)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">val</span><span style="color:#24292E;">, </span><span style="color:#E36209;">receiver</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`SET \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">}=\${</span><span style="color:#24292E;">val</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(target, prop, val, receiver) </span><span style="color:#6A737D;">// (2)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(user)</span></span>
<span class="line"><span style="color:#6A737D;">// console.log(Object.prototype.toString.call(user));</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> user.name </span><span style="color:#6A737D;">// shows &quot;GET name&quot;</span></span>
<span class="line"><span style="color:#24292E;">user.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Pete&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// shows &quot;SET name=Pete&quot;</span></span></code></pre></div><h2 id="reflect" tabindex="-1">reflect <a class="header-anchor" href="#reflect" aria-label="Permalink to &quot;reflect&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">z</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { w: </span><span style="color:#2AA198;">\`Super Hello\`</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">y</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { x: </span><span style="color:#2AA198;">\`hello\`</span><span style="color:#657B83;">, __proto__: </span><span style="color:#268BD2;">z</span><span style="color:#657B83;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getOwnPropertyDescriptor</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`x\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">has</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`w\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">ownKeys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`w\`</span><span style="color:#657B83;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">has</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`x\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">deleteProperty</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`x\`</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">has</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">y</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`x\`</span><span style="color:#657B83;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">z</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { w: </span><span style="color:#032F62;">\`Super Hello\`</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">y</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { x: </span><span style="color:#032F62;">\`hello\`</span><span style="color:#24292E;">, __proto__: z }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Reflect.</span><span style="color:#6F42C1;">getOwnPropertyDescriptor</span><span style="color:#24292E;">(y, </span><span style="color:#032F62;">\`x\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Reflect.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(y, </span><span style="color:#032F62;">\`w\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Reflect.</span><span style="color:#6F42C1;">ownKeys</span><span style="color:#24292E;">(y, </span><span style="color:#032F62;">\`w\`</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Reflect.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(y, </span><span style="color:#032F62;">\`x\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Reflect.</span><span style="color:#6F42C1;">deleteProperty</span><span style="color:#24292E;">(y, </span><span style="color:#032F62;">\`x\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Reflect.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(y, </span><span style="color:#032F62;">\`x\`</span><span style="color:#24292E;">))</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">    {},</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, key, receiver) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`getting \${</span><span style="color:#268BD2;">key</span><span style="color:#2AA198;">}!\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">receiver</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      },</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, key, value, receiver) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`setting \${</span><span style="color:#268BD2;">key</span><span style="color:#2AA198;">}!\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">receiver</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      },</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`________________________________________________\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handler</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">: (target, name) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#D33682;">29</span><span style="color:#657B83;">),</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">p</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">({}, </span><span style="color:#268BD2;">handler</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">p</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">p</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">b</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">undefined</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`c\`</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">p</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">p</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">c</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    {},</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">receiver</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`getting \${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">}!\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(target, key, receiver)</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, </span><span style="color:#E36209;">receiver</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`setting \${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">}!\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(target, key, value, receiver)</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`________________________________________________\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">handler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> (name </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> target </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> target[name] </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">29</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">({}, handler)</span></span>
<span class="line"><span style="color:#24292E;">  p.a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  p.b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`c\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> p, p.c)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="get和set" tabindex="-1">get和set <a class="header-anchor" href="#get和set" aria-label="Permalink to &quot;get和set&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">data</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">p</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">data</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, key, receiver) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`get value:\`</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">receiver</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, key, value, receiver) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`set value:\`</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">receiver</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">p</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Get value: push</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Get value: length</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Set value: 3 1</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Set value: length 4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(data, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">receiver</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`get value:\`</span><span style="color:#24292E;">, key)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(target, key, receiver)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, </span><span style="color:#E36209;">receiver</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`set value:\`</span><span style="color:#24292E;">, key, value)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(target, key, value, receiver)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">p.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get value: push</span></span>
<span class="line"><span style="color:#6A737D;">// Get value: length</span></span>
<span class="line"><span style="color:#6A737D;">// Set value: 3 1</span></span>
<span class="line"><span style="color:#6A737D;">// Set value: length 4</span></span></code></pre></div><h2 id="proxy构造函数" tabindex="-1">proxy构造函数 <a class="header-anchor" href="#proxy构造函数" aria-label="Permalink to &quot;proxy构造函数&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">class</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Person</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">constructor</span><span style="color:#657B83;">(name, age) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">name</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">age</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">age</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">say</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`my name is \${</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#2AA198;">}, and my age is \${</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">age</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">proxyTrack</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (targetClass) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">prototype</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">targetClass</span><span style="color:#657B83;">.prototype</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getOwnPropertyNames</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">prototype</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((name) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">targetClass</span><span style="color:#657B83;">.prototype[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">prototype</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">], {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(target, context, args) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">time</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">context</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">timeEnd</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">      },</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">targetClass</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">construct</span><span style="color:#657B83;">(target, args) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">get</span><span style="color:#657B83;">(target, prop) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`\${</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#2AA198;">}.\${</span><span style="color:#268BD2;">prop</span><span style="color:#2AA198;">} is being getting\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">prop</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">        },</span></span>
<span class="line"><span style="color:#657B83;">      })</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyClass</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">proxyTrack</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Person</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">myClass</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">MyClass</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;tom&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">21</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">myClass</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">say</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#268BD2;">myClass</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">(</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">age</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> age</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">say</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`my name is \${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}, and my age is \${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">age</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">proxyTrack</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">targetClass</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">targetClass</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span></span>
<span class="line"><span style="color:#24292E;">  Object.</span><span style="color:#6F42C1;">getOwnPropertyNames</span><span style="color:#24292E;">(prototype).</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">targetClass</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">[name] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(prototype[name], {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">context</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        target.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(context, args)</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(targetClass, {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">construct</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">target</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">args)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(obj, {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">target</span><span style="color:#032F62;">.</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}.\${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} is being getting\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> target[prop]</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MyClass</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">proxyTrack</span><span style="color:#24292E;">(Person)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myClass</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyClass</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;tom&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">21</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">myClass.</span><span style="color:#6F42C1;">say</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">myClass.name</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="proxy校验" tabindex="-1">proxy校验 <a class="header-anchor" href="#proxy校验" aria-label="Permalink to &quot;proxy校验&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 验证规则</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">validators</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  name: {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">validate</span><span style="color:#657B83;">(value) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">.length </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">6</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    message: </span><span style="color:#2AA198;">&#39;用户名长度不能小于六&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  password: {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">validate</span><span style="color:#657B83;">(value) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span><span style="color:#657B83;">.length </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    message: </span><span style="color:#2AA198;">&#39;密码长度不能小于十&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  moblie: {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">validate</span><span style="color:#657B83;">(value) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#DC322F;"> /</span><span style="color:#859900;">^</span><span style="color:#DC322F;">1(3</span><span style="color:#859900;">|</span><span style="color:#DC322F;">5</span><span style="color:#859900;">|</span><span style="color:#DC322F;">7</span><span style="color:#859900;">|</span><span style="color:#DC322F;">8</span><span style="color:#859900;">|</span><span style="color:#DC322F;">9)</span><span style="color:#CB4B16;">[0-9]</span><span style="color:#859900;">{9}$</span><span style="color:#DC322F;">/</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">test</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    message: </span><span style="color:#2AA198;">&#39;手机号格式错误&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 验证方法</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">validator</span><span style="color:#657B83;">(obj, validators) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">, {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">set</span><span style="color:#657B83;">(target, key, value) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">validator</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">validators</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">validator</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">validator</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">validate</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">value</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">target</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">value</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">alert</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">validator</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">message</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">form</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#268BD2;">form</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">validator</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">form</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">validators</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">form</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;666&#39;</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// 用户名长度不能小于六</span></span>
<span class="line"><span style="color:#268BD2;">form</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">password</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;113123123123123&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 验证规则</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">validators</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">validate</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    message: </span><span style="color:#032F62;">&#39;用户名长度不能小于六&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  password: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">validate</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    message: </span><span style="color:#032F62;">&#39;密码长度不能小于十&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  moblie: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">validate</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">1(3</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">5</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">7</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">8</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">9)</span><span style="color:#005CC5;">[0-9]</span><span style="color:#D73A49;">{9}$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    message: </span><span style="color:#032F62;">&#39;手机号格式错误&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 验证方法</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">validator</span><span style="color:#24292E;">(</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">validators</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(obj, {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">validator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> validators[key]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">validator) {</span></span>
<span class="line"><span style="color:#24292E;">        target[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (validator.</span><span style="color:#6F42C1;">validate</span><span style="color:#24292E;">(value)) {</span></span>
<span class="line"><span style="color:#24292E;">        target[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(validator.message </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> form </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">form </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">validator</span><span style="color:#24292E;">(form, validators)</span></span>
<span class="line"><span style="color:#24292E;">form.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;666&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 用户名长度不能小于六</span></span>
<span class="line"><span style="color:#24292E;">form.password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;113123123123123&#39;</span></span></code></pre></div><h2 id="array-push" tabindex="-1">array push <a class="header-anchor" href="#array-push" aria-label="Permalink to &quot;array push&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handle</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (params) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">params</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">params</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((accumulator, currentValue) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;object&#39;</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">accumulator</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">handle</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">accumulator</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">accumulator</span></span>
<span class="line"><span style="color:#657B83;">    }, [])</span></span>
<span class="line"><span style="color:#657B83;">  } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Reflect</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">ownKeys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">params</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((accumulator, currentValue) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">params</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">] </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;object&#39;</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">?</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">accumulator</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handle</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">params</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">]))</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">:</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">accumulator</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">params</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">currentValue</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">accumulator</span></span>
<span class="line"><span style="color:#657B83;">    }, {})</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span></span>
<span class="line"><span style="color:#657B83;">  {</span></span>
<span class="line"><span style="color:#657B83;">    age: </span><span style="color:#2AA198;">&#39;23&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    name: </span><span style="color:#D33682;">334</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  { time: </span><span style="color:#2AA198;">&#39;ee&#39;</span><span style="color:#657B83;">, date: </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Date</span><span style="color:#657B83;">() },</span></span>
<span class="line"><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#268BD2;">b</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handle</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">b</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">({ naa: </span><span style="color:#2AA198;">&#39;erer&#39;</span><span style="color:#657B83;"> })</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">b</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">params</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Array.</span><span style="color:#6F42C1;">isArray</span><span style="color:#24292E;">(params)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> params.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">accumulator</span><span style="color:#24292E;">, </span><span style="color:#E36209;">currentValue</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> currentValue </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;object&#39;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> accumulator.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(currentValue))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> accumulator.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(currentValue)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> accumulator</span></span>
<span class="line"><span style="color:#24292E;">    }, [])</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">ownKeys</span><span style="color:#24292E;">(params).</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">accumulator</span><span style="color:#24292E;">, </span><span style="color:#E36209;">currentValue</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> params[currentValue] </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;object&#39;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> (accumulator[currentValue] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(params[currentValue]))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (accumulator[currentValue] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> params[currentValue])</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> accumulator</span></span>
<span class="line"><span style="color:#24292E;">    }, {})</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#032F62;">&#39;23&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#005CC5;">334</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  { time: </span><span style="color:#032F62;">&#39;ee&#39;</span><span style="color:#24292E;">, date: </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">() },</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#24292E;">b.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({ naa: </span><span style="color:#032F62;">&#39;erer&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">extend</span><span style="color:#657B83;">(sup, base) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">descriptor</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getOwnPropertyDescriptor</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">base</span><span style="color:#657B83;">.prototype,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;constructor&#39;</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">base</span><span style="color:#657B83;">.prototype </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">create</span><span style="color:#657B83;">(</span><span style="color:#859900;">sup</span><span style="color:#657B83;">.prototype)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handler</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">construct</span><span style="color:#657B83;">(target, args) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">create</span><span style="color:#657B83;">(</span><span style="color:#859900;">base</span><span style="color:#657B83;">.prototype)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">target</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(target, that, args) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">sup</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">that</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">base</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">that</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">proxy</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Proxy</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">base</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">handler</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">descriptor</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">value</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">proxy</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">defineProperty</span><span style="color:#657B83;">(</span><span style="color:#859900;">base</span><span style="color:#657B83;">.prototype, </span><span style="color:#2AA198;">&#39;constructor&#39;</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">descriptor</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">proxy</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Person</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (name) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">name</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Boy</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">extend</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Person</span><span style="color:#657B83;">, </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (name, age) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">age</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">age</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Boy</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">sex</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;M&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Peter</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Boy</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;Peter&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">13</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Peter</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">sex</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// &quot;M&quot;</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Peter</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// &quot;Peter&quot;</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Peter</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">age</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// 13</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">extend</span><span style="color:#24292E;">(</span><span style="color:#E36209;">sup</span><span style="color:#24292E;">, </span><span style="color:#E36209;">base</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> descriptor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">getOwnPropertyDescriptor</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">base</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;constructor&#39;</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">base</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">sup</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">handler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">construct</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">base</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(target, obj, args)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#E36209;">target</span><span style="color:#24292E;">, </span><span style="color:#E36209;">that</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      sup.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(that, args)</span></span>
<span class="line"><span style="color:#24292E;">      base.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(that, args)</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> proxy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(base, handler)</span></span>
<span class="line"><span style="color:#24292E;">  descriptor.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> proxy</span></span>
<span class="line"><span style="color:#24292E;">  Object.</span><span style="color:#6F42C1;">defineProperty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">base</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;constructor&#39;</span><span style="color:#24292E;">, descriptor)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> proxy</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> Boy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">extend</span><span style="color:#24292E;">(Person, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">age</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> age</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">Boy</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.sex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;M&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> Peter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Boy</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Peter&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Peter.sex) </span><span style="color:#6A737D;">// &quot;M&quot;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Peter.name) </span><span style="color:#6A737D;">// &quot;Peter&quot;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Peter.age) </span><span style="color:#6A737D;">// 13</span></span></code></pre></div>`,23),e=[o];function t(c,r,y,B,i,E){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{A as __pageData,g as default};
