import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.97257f7d.js";const u=JSON.parse('{"title":"携程","description":"","frontmatter":{},"headers":[],"relativePath":"interview/exam/ctrip.md","filePath":"interview/exam/ctrip.md"}'),p={name:"interview/exam/ctrip.md"},o=l(`<h1 id="携程" tabindex="-1">携程 <a class="header-anchor" href="#携程" aria-label="Permalink to &quot;携程&quot;">​</a></h1><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;携程C2t0r1i8p2020校招&#39;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">handleStr</span><span style="color:#657B83;">(str) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">nums</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">match</span><span style="color:#657B83;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">\\d</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">words</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">match</span><span style="color:#657B83;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">[a-zA-Z]</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">uniqueStr</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">nums</span><span style="color:#657B83;">) </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">words</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">uniqueStr</span><span style="color:#657B83;">(str) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">split</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">    .</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (element, index) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">) </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">    .</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 测试</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">handleStr</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;携程C2t0r1i8p2020校招&#39;</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 2018Ctrip</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;携程C2t0r1i8p2020校招&#39;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handleStr</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> nums </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">\\d</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> words </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">[a-zA-Z]</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">uniqueStr</span><span style="color:#24292E;">(nums) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> words</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">uniqueStr</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(element) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> index</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 测试</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">handleStr</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;携程C2t0r1i8p2020校招&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;">// 2018Ctrip</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="美团" tabindex="-1">美团 <a class="header-anchor" href="#美团" aria-label="Permalink to &quot;美团&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">groupList</span><span style="color:#657B83;">(list) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">list</span><span style="color:#657B83;">) </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">list</span><span style="color:#657B83;">.length </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">validItems</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">getValidItems</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">list</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">validItems</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (item) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">hasOwnProperty</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">content</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">content</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">adjustFormat</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">getValidItems</span><span style="color:#657B83;">(json) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">json</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (element) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">isPureObject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">element</span><span style="color:#657B83;">) </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">element</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">type</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">element</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">content</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">isPureObject</span><span style="color:#657B83;">(item) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">Object</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">(</span><span style="color:#D33682;">8</span><span style="color:#657B83;">, </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#657B83;">) </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;Object&#39;</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">adjustFormat</span><span style="color:#657B83;">(obj) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (type) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> { type: </span><span style="color:#268BD2;">type</span><span style="color:#657B83;">, contents: </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">] }</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// test</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">input</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#B58900;">null</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#D33682;">2</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#2AA198;">&#39;test&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#B58900;">undefined</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  {</span></span>
<span class="line"><span style="color:#657B83;">    type: </span><span style="color:#2AA198;">&#39;product&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    content: </span><span style="color:#2AA198;">&#39;product1&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  {</span></span>
<span class="line"><span style="color:#657B83;">    type: </span><span style="color:#2AA198;">&#39;product&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    content: </span><span style="color:#2AA198;">&#39;product2&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  {</span></span>
<span class="line"><span style="color:#657B83;">    type: </span><span style="color:#2AA198;">&#39;tag&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    content: </span><span style="color:#2AA198;">&#39;tag1&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  {</span></span>
<span class="line"><span style="color:#657B83;">    type: </span><span style="color:#2AA198;">&#39;product&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    content: </span><span style="color:#2AA198;">&#39;product3&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  {</span></span>
<span class="line"><span style="color:#657B83;">    type: </span><span style="color:#2AA198;">&#39;tag&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    content: </span><span style="color:#2AA198;">&#39;tag2&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">JSON</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">stringify</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">groupList</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">input</span><span style="color:#657B83;">)))</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// [{&quot;type&quot;:&quot;product&quot;,&quot;contents&quot;:[&quot;product1&quot;,&quot;product2&quot;,&quot;product3&quot;]},{&quot;type&quot;:&quot;tag&quot;,&quot;contents&quot;:[&quot;tag1&quot;,&quot;tag2&quot;]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">groupList</span><span style="color:#24292E;">(</span><span style="color:#E36209;">list</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">Array.</span><span style="color:#6F42C1;">isArray</span><span style="color:#24292E;">(list) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> list.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> validItems </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getValidItems</span><span style="color:#24292E;">(list)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  validItems.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (result.</span><span style="color:#6F42C1;">hasOwnProperty</span><span style="color:#24292E;">(item.type)) {</span></span>
<span class="line"><span style="color:#24292E;">      result[item.type].</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(item.content)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      result[item.type] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">      result[item.type].</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(item.content)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">adjustFormat</span><span style="color:#24292E;">(result)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getValidItems</span><span style="color:#24292E;">(</span><span style="color:#E36209;">json</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> json.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isPureObject</span><span style="color:#24292E;">(element) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> element.type </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> element.content</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isPureObject</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Object</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.toString.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(item).</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Object&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">adjustFormat</span><span style="color:#24292E;">(</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(obj).</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">type</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> { type: type, contents: obj[type] }</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// test</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    content: </span><span style="color:#032F62;">&#39;product1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    content: </span><span style="color:#032F62;">&#39;product2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;tag&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    content: </span><span style="color:#032F62;">&#39;tag1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    content: </span><span style="color:#032F62;">&#39;product3&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;tag&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    content: </span><span style="color:#032F62;">&#39;tag2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">groupList</span><span style="color:#24292E;">(input)))</span></span>
<span class="line"><span style="color:#6A737D;">// [{&quot;type&quot;:&quot;product&quot;,&quot;contents&quot;:[&quot;product1&quot;,&quot;product2&quot;,&quot;product3&quot;]},{&quot;type&quot;:&quot;tag&quot;,&quot;contents&quot;:[&quot;tag1&quot;,&quot;tag2&quot;]}]</span></span></code></pre></div><h2 id="flat" tabindex="-1">flat <a class="header-anchor" href="#flat" aria-label="Permalink to &quot;flat&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">myFlat</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (num </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">Number</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">) </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Number</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">) </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">count</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">concat</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">myFlat</span><span style="color:#657B83;">(</span><span style="color:#859900;">--</span><span style="color:#268BD2;">count</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">      } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span></span>
<span class="line"><span style="color:#657B83;">  } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;.flat is not a function&#39;</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">myFlat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">num</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Array.</span><span style="color:#6F42C1;">isArray</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">Number</span><span style="color:#24292E;">(num) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Number</span><span style="color:#24292E;">(num) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Array.</span><span style="color:#6F42C1;">isArray</span><span style="color:#24292E;">(item)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num</span></span>
<span class="line"><span style="color:#24292E;">        arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(item.</span><span style="color:#6F42C1;">myFlat</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">count))</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        arr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(item)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.flat is not a function&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="防抖节流" tabindex="-1">防抖节流 <a class="header-anchor" href="#防抖节流" aria-label="Permalink to &quot;防抖节流&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">//非立即执行版:</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//首先准备我们要使用的回调函数</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">shotCat</span><span style="color:#657B83;">(content) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;shotCat出品,必属精品!必须点赞!(滑稽)&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//然后准备包装函数:</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//1,保存定时器标识</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//2,返回闭包函数: 1)对定时器的判断清除;2)一般还需要保存函数的参数(一般就是事件返回的对象)和上下文(定时器存在this隐式丢失,详情可以看我不知道的js上)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//最后补充一句,这里不建议通过定义一个全局变量来替代闭包保存定时器标识.</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">debounce</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (fun, delay </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2000</span><span style="color:#657B83;">) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">timer</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#859900;">...</span><span style="color:#657B83;">args) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//这里对定时器的设置有两种方法,第一种就是将定时器保存在函数(函数也是对象)的属性上,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//这种写法,很简便,但不是很常用</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">clearTimeout</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">timer</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">timer</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">fun</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }, </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//另外一种写法就是我们比较常见的</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//if (timer) clearTimeout(timer);     相比上面的方法,这里多一个判断</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//timer = setTimeout(function () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//    fun.call(that, _args)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">//}, delay)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//接着用变量保存保存 debounce 返回的带有延时功能的函数</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">debounceShotCat</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">debounce</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">shotCat</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2000</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//最后添加事件监听 回调debounceShotCat 并传入事件返回的对象</span></span>
<span class="line"><span style="color:#268BD2;">debounceShotCat</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;防抖测试成功&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//带有立即执行选项的防抖函数:</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//思路和上面的大致相同,如果是立即执行,则定时器中不再包含回调函数,而是在回调函数执行后,仅起到延时和重置定时器标识的作用</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">debounce2</span><span style="color:#657B83;">(fun, delay </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">500</span><span style="color:#657B83;">, immediate </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">timer</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//保存定时器</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (args) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">that</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">_args</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">args</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">timer</span><span style="color:#657B83;">) </span><span style="color:#268BD2;">clearTimeout</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">timer</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//不管是否立即执行都需要首先清空定时器</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">immediate</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">timer</span><span style="color:#657B83;">) </span><span style="color:#268BD2;">fun</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">that</span><span style="color:#657B83;">, </span><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">//如果定时器不存在,则说明延时已过,可以立即执行函数</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//不管上一个延时是否完成,都需要重置定时器</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">timer</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">timer</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//到时间后,定时器自动设为null,不仅方便判断定时器状态还能避免内存泄露</span></span>
<span class="line"><span style="color:#657B83;">      }, </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//如果是非立即执行版,则重新设定定时器,并将回调函数放入其中</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">timer</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(</span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">fun</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">that</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">_args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      }, </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//非立即执行版:</span></span>
<span class="line"><span style="color:#6A737D;">//首先准备我们要使用的回调函数</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">shotCat</span><span style="color:#24292E;">(</span><span style="color:#E36209;">content</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;shotCat出品,必属精品!必须点赞!(滑稽)&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//然后准备包装函数:</span></span>
<span class="line"><span style="color:#6A737D;">//1,保存定时器标识</span></span>
<span class="line"><span style="color:#6A737D;">//2,返回闭包函数: 1)对定时器的判断清除;2)一般还需要保存函数的参数(一般就是事件返回的对象)和上下文(定时器存在this隐式丢失,详情可以看我不知道的js上)</span></span>
<span class="line"><span style="color:#6A737D;">//最后补充一句,这里不建议通过定义一个全局变量来替代闭包保存定时器标识.</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">debounce</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">fun</span><span style="color:#24292E;">, </span><span style="color:#E36209;">delay</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">...</span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//这里对定时器的设置有两种方法,第一种就是将定时器保存在函数(函数也是对象)的属性上,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//这种写法,很简便,但不是很常用</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">clearTimeout</span><span style="color:#24292E;">(timer)</span></span>
<span class="line"><span style="color:#24292E;">    timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      fun.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, args)</span></span>
<span class="line"><span style="color:#24292E;">    }, delay)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//另外一种写法就是我们比较常见的</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//if (timer) clearTimeout(timer);     相比上面的方法,这里多一个判断</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//timer = setTimeout(function () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//    fun.call(that, _args)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//}, delay)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//接着用变量保存保存 debounce 返回的带有延时功能的函数</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> debounceShotCat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">debounce</span><span style="color:#24292E;">(shotCat, </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//最后添加事件监听 回调debounceShotCat 并传入事件返回的对象</span></span>
<span class="line"><span style="color:#6F42C1;">debounceShotCat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;防抖测试成功&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//带有立即执行选项的防抖函数:</span></span>
<span class="line"><span style="color:#6A737D;">//思路和上面的大致相同,如果是立即执行,则定时器中不再包含回调函数,而是在回调函数执行后,仅起到延时和重置定时器标识的作用</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">debounce2</span><span style="color:#24292E;">(</span><span style="color:#E36209;">fun</span><span style="color:#24292E;">, </span><span style="color:#E36209;">delay</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#E36209;">immediate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//保存定时器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> that </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> _args </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> args</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (timer) </span><span style="color:#6F42C1;">clearTimeout</span><span style="color:#24292E;">(timer) </span><span style="color:#6A737D;">//不管是否立即执行都需要首先清空定时器</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (immediate) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">timer) fun.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(that, </span><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.slice.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(args)) </span><span style="color:#6A737D;">//如果定时器不存在,则说明延时已过,可以立即执行函数</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//不管上一个延时是否完成,都需要重置定时器</span></span>
<span class="line"><span style="color:#24292E;">      timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">        timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//到时间后,定时器自动设为null,不仅方便判断定时器状态还能避免内存泄露</span></span>
<span class="line"><span style="color:#24292E;">      }, delay)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//如果是非立即执行版,则重新设定定时器,并将回调函数放入其中</span></span>
<span class="line"><span style="color:#24292E;">      timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">        fun.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(that, _args)</span></span>
<span class="line"><span style="color:#24292E;">      }, delay)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,8),e=[o];function t(c,r,y,i,B,E){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{u as __pageData,A as default};
