import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.97257f7d.js";const A=JSON.parse('{"title":"第四天","description":"","frontmatter":{},"headers":[],"relativePath":"interview/handwritten/fourth.md","filePath":"interview/handwritten/fourth.md"}'),p={name:"interview/handwritten/fourth.md"},o=l(`<h1 id="第四天" tabindex="-1">第四天 <a class="header-anchor" href="#第四天" aria-label="Permalink to &quot;第四天&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">of</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">of</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Array.of(7);       // [7]</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Array.of(1, 2, 3); // [1, 2, 3]</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Array(7);          // [ , , , , , , ]</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// Array(1, 2, 3);    // [1, 2, 3]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">Array.of) {</span></span>
<span class="line"><span style="color:#24292E;">  Array.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.slice.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Array.of(7);       // [7]</span></span>
<span class="line"><span style="color:#6A737D;">// Array.of(1, 2, 3); // [1, 2, 3]</span></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#6A737D;">// Array(7);          // [ , , , , , , ]</span></span>
<span class="line"><span style="color:#6A737D;">// Array(1, 2, 3);    // [1, 2, 3]</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Product</span><span style="color:#657B83;">(name</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;">, price</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">name</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">price</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">price</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Food</span><span style="color:#657B83;">(name, price) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">Product</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">name</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">price</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">category</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;food&#39;</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Food</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;cheese&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">5</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// expected output: &quot;cheese&quot;</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Product</span><span style="color:#24292E;">(</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">, </span><span style="color:#E36209;">price</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> price</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Food</span><span style="color:#24292E;">(</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  Product.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, name, price)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.category </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;food&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Food</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;cheese&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">).name)</span></span>
<span class="line"><span style="color:#6A737D;">// expected output: &quot;cheese&quot;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">student</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">getInfo</span><span style="color:#657B83;">: </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (name, isRegistered) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;this1&#39;</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">getInfo2</span><span style="color:#657B83;">(name, isRegistered) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;this2&#39;</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">//跟上面一样</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">getInfo3</span><span style="color:#657B83;">: (name, isRegistered) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;this3&#39;</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// 指向window</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">student</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getInfo</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getPrototypeOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">a</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#268BD2;">student</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getInfo2</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;aa&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">student</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getInfo3</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;aa&#39;</span><span style="color:#657B83;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> student </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">getInfo</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">isRegistered</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;this1&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">getInfo2</span><span style="color:#24292E;">(</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">isRegistered</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;this2&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//跟上面一样</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">getInfo3</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">isRegistered</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;this3&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 指向window</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> student.getInfo</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Object.</span><span style="color:#6F42C1;">getPrototypeOf</span><span style="color:#24292E;">(a))</span></span>
<span class="line"><span style="color:#24292E;">student.</span><span style="color:#6F42C1;">getInfo2</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;aa&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">student.</span><span style="color:#6F42C1;">getInfo3</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;aa&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">curry</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (fn) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">params</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#859900;">...</span><span style="color:#657B83;">args) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">params</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#268BD2;">params</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">params</span><span style="color:#657B83;">.length </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">.length) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">params</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">sum</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (a, b, c, d, e) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">sum</span><span style="color:#657B83;">.length)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">b</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">c</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">d</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">e</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">curry</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">sum</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">res</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">)(</span><span style="color:#D33682;">2</span><span style="color:#657B83;">)(</span><span style="color:#D33682;">3</span><span style="color:#657B83;">)(</span><span style="color:#D33682;">4</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">res</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">curry</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">fn</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">...</span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">params, </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">args]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (params.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> fn.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> fn.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(fn, </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">args)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> fn.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(fn, params)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">, </span><span style="color:#E36209;">c</span><span style="color:#24292E;">, </span><span style="color:#E36209;">d</span><span style="color:#24292E;">, </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(sum.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> d </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> e</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">curry</span><span style="color:#24292E;">(sum)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fn</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res)</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">isType</span><span style="color:#657B83;">(data</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;">, type</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">typeObj</span><span style="color:#859900;">:</span><span style="color:#657B83;"> { [index</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">]</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> } </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object String]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;string&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Number]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;number&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Boolean]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;boolean&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Null]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;null&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Undefined]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;undefined&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Object]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Array]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;array&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Function]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Date]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;date&#39;</span><span style="color:#657B83;">, </span><span style="color:#93A1A1;font-style:italic;">// Object.prototype.toString.call(new Date())</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object RegExp]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;regExp&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Map]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;map&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Set]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;set&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object HTMLDivElement]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;dom&#39;</span><span style="color:#657B83;">, </span><span style="color:#93A1A1;font-style:italic;">// document.querySelector(&#39;#app&#39;)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object WeakMap]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;weakMap&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Window]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;window&#39;</span><span style="color:#657B83;">, </span><span style="color:#93A1A1;font-style:italic;">// Object.prototype.toString.call(window)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Error]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;error&#39;</span><span style="color:#657B83;">, </span><span style="color:#93A1A1;font-style:italic;">// new Error(&#39;1&#39;)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#2AA198;">&#39;[object Arguments]&#39;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&#39;arguments&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">name</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">Object</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">data</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// 借用Object.prototype.toString()获取数据类型</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">typeName</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">typeObj</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">] </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;未知类型&#39;</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// 匹配数据类型</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">typeName</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">type</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// 判断该数据类型是否为传入的类型</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">isType</span><span style="color:#657B83;">({}, </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#657B83;">), </span><span style="color:#93A1A1;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">isType</span><span style="color:#657B83;">([], </span><span style="color:#2AA198;">&#39;array&#39;</span><span style="color:#657B83;">), </span><span style="color:#93A1A1;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">isType</span><span style="color:#657B83;">(</span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Date</span><span style="color:#657B83;">(), </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#657B83;">), </span><span style="color:#93A1A1;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">isType</span><span style="color:#657B83;">(</span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Date</span><span style="color:#657B83;">(), </span><span style="color:#2AA198;">&#39;date&#39;</span><span style="color:#657B83;">), </span><span style="color:#93A1A1;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#657B83;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isType</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">, </span><span style="color:#E36209;">type</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">typeObj</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> { [</span><span style="color:#E36209;">index</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object String]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Number]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Boolean]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;boolean&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Null]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;null&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Undefined]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;undefined&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Object]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Array]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;array&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Function]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Date]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;date&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Object.prototype.toString.call(new Date())</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object RegExp]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;regExp&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Map]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;map&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Set]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;set&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object HTMLDivElement]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;dom&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// document.querySelector(&#39;#app&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object WeakMap]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;weakMap&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Window]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;window&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Object.prototype.toString.call(window)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Error]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// new Error(&#39;1&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;[object Arguments]&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;arguments&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Object</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.toString.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(data) </span><span style="color:#6A737D;">// 借用Object.prototype.toString()获取数据类型</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> typeName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> typeObj[name] </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;未知类型&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 匹配数据类型</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> typeName </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> type </span><span style="color:#6A737D;">// 判断该数据类型是否为传入的类型</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">isType</span><span style="color:#24292E;">({}, </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">isType</span><span style="color:#24292E;">([], </span><span style="color:#032F62;">&#39;array&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">isType</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">isType</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&#39;date&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">myMap</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">fn</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Function</span><span style="color:#657B83;">, thisArg) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">newArr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">thisArg</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">newArr</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">thisArg</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">i</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">newArr</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#D33682;">4</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">c</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">myMap</span><span style="color:#657B83;">((item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">*</span><span style="color:#657B83;"> </span><span style="color:#D33682;">2</span></span>
<span class="line"><span style="color:#657B83;">}, </span><span style="color:#2AA198;">&#39;a&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">c</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">d</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">((item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">34</span></span>
<span class="line"><span style="color:#657B83;">}, </span><span style="color:#2AA198;">&#39;aaaaaaa&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">d</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">myMap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">fn</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">, </span><span style="color:#E36209;">thisArg</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> newArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(thisArg)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    newArr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(fn.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(thisArg, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">[i], i, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> newArr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">myMap</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">}, </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(c)</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">34</span></span>
<span class="line"><span style="color:#24292E;">}, </span><span style="color:#032F62;">&#39;aaaaaaa&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(d)</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 第一版 (来自《JavaScript权威指南》)</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">memoize</span><span style="color:#657B83;">(f) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">.length </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;,&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">f</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">} </span><span style="color:#93A1A1;font-style:italic;">// 第一版 (来自《JavaScript权威指南》)</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">memoize</span><span style="color:#657B83;">(f) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> () {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">.length </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#859900;">Array</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">join</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;,&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">cache</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">f</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">apply</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">arguments</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 第一版 (来自《JavaScript权威指南》)</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">memoize</span><span style="color:#24292E;">(</span><span style="color:#E36209;">f</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cache </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.join.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> cache) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cache[key]</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (cache[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#6A737D;">// 第一版 (来自《JavaScript权威指南》)</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">memoize</span><span style="color:#24292E;">(</span><span style="color:#E36209;">f</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cache </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Array</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.join.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> cache) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cache[key]</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (cache[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">myInstanceOf</span><span style="color:#657B83;">(left</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">, right</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">lproto</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getPrototypeOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">left</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#B58900;">true</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">lproto</span><span style="color:#657B83;"> </span><span style="color:#859900;">==</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">lproto</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#859900;">right</span><span style="color:#657B83;">.prototype) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">lproto</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">getPrototypeOf</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">lproto</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">myInstanceOf</span><span style="color:#657B83;">([</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">], </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">)) </span><span style="color:#93A1A1;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myInstanceOf</span><span style="color:#24292E;">(</span><span style="color:#E36209;">left</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">right</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> lproto </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">getPrototypeOf</span><span style="color:#24292E;">(left)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (lproto </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (lproto </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">right</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    lproto </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">getPrototypeOf</span><span style="color:#24292E;">(lproto)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">myInstanceOf</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], Array)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="数组转大写" tabindex="-1">数组转大写 <a class="header-anchor" href="#数组转大写" aria-label="Permalink to &quot;数组转大写&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-light vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">//如果数字含有小数部分，那么可以将小数部分单独取出</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//将小数部分的数字转换为字符串的方法：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnNumChar</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">\`零\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`一\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`二\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`三\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`四\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`五\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`六\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`七\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`八\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`九\`</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnUnitSection</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">\`\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`万\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`亿\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`万亿\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`亿亿\`</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnUnitChar</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#2AA198;">\`\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`十\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`百\`</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">\`千\`</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">numToChn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (num) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">indexOf</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">\`.\`</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">!=</span><span style="color:#657B83;"> </span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">toString</span><span style="color:#657B83;">().</span><span style="color:#268BD2;">slice</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`点\`</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">; </span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;">.length; </span><span style="color:#268BD2;">i</span><span style="color:#859900;">++</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">+=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnNumChar</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">parseInt</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">str</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">])]</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span></span>
<span class="line"><span style="color:#657B83;">  } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//定义在每个小节的内部进行转化的方法，其他部分则与小节内部转化方法相同</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">sectionToChinese</span><span style="color:#657B83;">(section) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">chnstr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">zero</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">count</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//zero为是否进行补零， 第一次进行取余由于为个位数，默认不补零</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">v</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">%</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//对数字取余10，得到的数即为个位数</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">v</span><span style="color:#657B83;"> </span><span style="color:#859900;">==</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">//如果数字为零，则对字符串进行补零</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">zero</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">zero</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//如果遇到连续多次取余都是0，那么只需补一个零即可</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">chnstr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnNumChar</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">v</span><span style="color:#657B83;">] </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnstr</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    } </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">zero</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">//第一次取余之后，如果再次取余为零，则需要补零</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnNumChar</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">v</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">+=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnUnitChar</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">count</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">chnstr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnstr</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">count</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">floor</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnstr</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//定义整个数字全部转换的方法，需要依次对数字进行10000为单位的取余，然后分成小节，按小节计算，当每个小节的数不足1000时，则需要进行补零</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">TransformToChinese</span><span style="color:#657B83;">(num) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">numToChn</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">floor</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">unitPos</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">strIns</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\`</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">chnStr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\`</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">needZero</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnNumChar</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">while</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">%</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10000</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">needZero</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">chnStr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnNumChar</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">] </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnStr</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">strIns</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">sectionToChinese</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">section</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">strIns</span><span style="color:#657B83;"> </span><span style="color:#859900;">+=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnUnitSection</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">unitPos</span><span style="color:#657B83;">] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnUnitSection</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">chnStr</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">strIns</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnStr</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">needZero</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1000</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">section</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">floor</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">num</span><span style="color:#657B83;"> </span><span style="color:#859900;">/</span><span style="color:#657B83;"> </span><span style="color:#D33682;">10000</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">unitPos</span><span style="color:#859900;">++</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">chnStr</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">m</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">TransformToChinese</span><span style="color:#657B83;">(</span><span style="color:#D33682;">12339492835.99302</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">m</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">//输出    &quot;一百二十三亿三千九百四十九万二千八百三十五点九九三零二&quot;</span></span>
<span class="line"><span style="color:#859900;">export</span><span style="color:#657B83;"> { </span><span style="color:#268BD2;">TransformToChinese</span><span style="color:#657B83;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//如果数字含有小数部分，那么可以将小数部分单独取出</span></span>
<span class="line"><span style="color:#6A737D;">//将小数部分的数字转换为字符串的方法：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> chnNumChar </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">\`零\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`一\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`二\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`三\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`四\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`五\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`六\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`七\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`八\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`九\`</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> chnUnitSection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">\`\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`万\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`亿\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`万亿\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`亿亿\`</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> chnUnitChar </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">\`\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`十\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`百\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`千\`</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">numToChn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">num</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`.\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(index)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`点\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> str.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      a </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> chnNumChar[</span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(str[i])]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//定义在每个小节的内部进行转化的方法，其他部分则与小节内部转化方法相同</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sectionToChinese</span><span style="color:#24292E;">(</span><span style="color:#E36209;">section</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    chnstr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    zero </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//zero为是否进行补零， 第一次进行取余由于为个位数，默认不补零</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (section </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> v </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> section </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//对数字取余10，得到的数即为个位数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (v </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//如果数字为零，则对字符串进行补零</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (zero) {</span></span>
<span class="line"><span style="color:#24292E;">        zero </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//如果遇到连续多次取余都是0，那么只需补一个零即可</span></span>
<span class="line"><span style="color:#24292E;">        chnstr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chnNumChar[v] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> chnstr</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      zero </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//第一次取余之后，如果再次取余为零，则需要补零</span></span>
<span class="line"><span style="color:#24292E;">      str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chnNumChar[v]</span></span>
<span class="line"><span style="color:#24292E;">      str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> chnUnitChar[count]</span></span>
<span class="line"><span style="color:#24292E;">      chnstr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> chnstr</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    count</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">    section </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(section </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> chnstr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//定义整个数字全部转换的方法，需要依次对数字进行10000为单位的取余，然后分成小节，按小节计算，当每个小节的数不足1000时，则需要进行补零</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TransformToChinese</span><span style="color:#24292E;">(</span><span style="color:#E36209;">num</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">numToChn</span><span style="color:#24292E;">(num)</span></span>
<span class="line"><span style="color:#24292E;">  num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(num)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> unitPos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> strIns </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    chnStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\`</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> needZero </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (num </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> chnNumChar[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (num </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> section </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (needZero) {</span></span>
<span class="line"><span style="color:#24292E;">      chnStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chnNumChar[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> chnStr</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    strIns </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sectionToChinese</span><span style="color:#24292E;">(section)</span></span>
<span class="line"><span style="color:#24292E;">    strIns </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> section </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> chnUnitSection[unitPos] </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> chnUnitSection[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    chnStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> strIns </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> chnStr</span></span>
<span class="line"><span style="color:#24292E;">    needZero </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> section </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> section </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(num </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    unitPos</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> chnStr </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> a</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TransformToChinese</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12339492835.99302</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(m)</span></span>
<span class="line"><span style="color:#6A737D;">//输出    &quot;一百二十三亿三千九百四十九万二千八百三十五点九九三零二&quot;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { TransformToChinese }</span></span></code></pre></div>`,11),e=[o];function t(c,r,y,B,i,E){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{A as __pageData,h as default};
